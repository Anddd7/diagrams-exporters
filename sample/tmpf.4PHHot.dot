digraph {
	compound = "true"
	newrank = "true"
	subgraph "root" {
		"[root] aws_eks_addon.ebs-csi (expand)" [label = "aws_eks_addon.ebs-csi", shape = "box"]
		"[root] data.aws_availability_zones.available (expand)" [label = "data.aws_availability_zones.available", shape = "box"]
		"[root] data.aws_iam_policy.ebs_csi_policy (expand)" [label = "data.aws_iam_policy.ebs_csi_policy", shape = "box"]
		"[root] module.eks.aws_cloudwatch_log_group.this (expand)" [label = "module.eks.aws_cloudwatch_log_group.this", shape = "box"]
		"[root] module.eks.aws_ec2_tag.cluster_primary_security_group (expand)" [label = "module.eks.aws_ec2_tag.cluster_primary_security_group", shape = "box"]
		"[root] module.eks.aws_eks_addon.before_compute (expand)" [label = "module.eks.aws_eks_addon.before_compute", shape = "box"]
		"[root] module.eks.aws_eks_addon.this (expand)" [label = "module.eks.aws_eks_addon.this", shape = "box"]
		"[root] module.eks.aws_eks_cluster.this (expand)" [label = "module.eks.aws_eks_cluster.this", shape = "box"]
		"[root] module.eks.aws_eks_identity_provider_config.this (expand)" [label = "module.eks.aws_eks_identity_provider_config.this", shape = "box"]
		"[root] module.eks.aws_iam_openid_connect_provider.oidc_provider (expand)" [label = "module.eks.aws_iam_openid_connect_provider.oidc_provider", shape = "box"]
		"[root] module.eks.aws_iam_policy.cluster_encryption (expand)" [label = "module.eks.aws_iam_policy.cluster_encryption", shape = "box"]
		"[root] module.eks.aws_iam_policy.cni_ipv6_policy (expand)" [label = "module.eks.aws_iam_policy.cni_ipv6_policy", shape = "box"]
		"[root] module.eks.aws_iam_role.this (expand)" [label = "module.eks.aws_iam_role.this", shape = "box"]
		"[root] module.eks.aws_iam_role_policy_attachment.additional (expand)" [label = "module.eks.aws_iam_role_policy_attachment.additional", shape = "box"]
		"[root] module.eks.aws_iam_role_policy_attachment.cluster_encryption (expand)" [label = "module.eks.aws_iam_role_policy_attachment.cluster_encryption", shape = "box"]
		"[root] module.eks.aws_iam_role_policy_attachment.this (expand)" [label = "module.eks.aws_iam_role_policy_attachment.this", shape = "box"]
		"[root] module.eks.aws_security_group.cluster (expand)" [label = "module.eks.aws_security_group.cluster", shape = "box"]
		"[root] module.eks.aws_security_group.node (expand)" [label = "module.eks.aws_security_group.node", shape = "box"]
		"[root] module.eks.aws_security_group_rule.cluster (expand)" [label = "module.eks.aws_security_group_rule.cluster", shape = "box"]
		"[root] module.eks.aws_security_group_rule.node (expand)" [label = "module.eks.aws_security_group_rule.node", shape = "box"]
		"[root] module.eks.data.aws_caller_identity.current (expand)" [label = "module.eks.data.aws_caller_identity.current", shape = "box"]
		"[root] module.eks.data.aws_eks_addon_version.this (expand)" [label = "module.eks.data.aws_eks_addon_version.this", shape = "box"]
		"[root] module.eks.data.aws_iam_policy_document.assume_role_policy (expand)" [label = "module.eks.data.aws_iam_policy_document.assume_role_policy", shape = "box"]
		"[root] module.eks.data.aws_iam_policy_document.cni_ipv6_policy (expand)" [label = "module.eks.data.aws_iam_policy_document.cni_ipv6_policy", shape = "box"]
		"[root] module.eks.data.aws_iam_session_context.current (expand)" [label = "module.eks.data.aws_iam_session_context.current", shape = "box"]
		"[root] module.eks.data.aws_partition.current (expand)" [label = "module.eks.data.aws_partition.current", shape = "box"]
		"[root] module.eks.data.tls_certificate.this (expand)" [label = "module.eks.data.tls_certificate.this", shape = "box"]
		"[root] module.eks.kubernetes_config_map.aws_auth (expand)" [label = "module.eks.kubernetes_config_map.aws_auth", shape = "box"]
		"[root] module.eks.kubernetes_config_map_v1_data.aws_auth (expand)" [label = "module.eks.kubernetes_config_map_v1_data.aws_auth", shape = "box"]
		"[root] module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this (expand)" [label = "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this", shape = "box"]
		"[root] module.eks.module.eks_managed_node_group.aws_eks_node_group.this (expand)" [label = "module.eks.module.eks_managed_node_group.aws_eks_node_group.this", shape = "box"]
		"[root] module.eks.module.eks_managed_node_group.aws_iam_role.this (expand)" [label = "module.eks.module.eks_managed_node_group.aws_iam_role.this", shape = "box"]
		"[root] module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional (expand)" [label = "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional", shape = "box"]
		"[root] module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this (expand)" [label = "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this", shape = "box"]
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" [label = "module.eks.module.eks_managed_node_group.aws_launch_template.this", shape = "box"]
		"[root] module.eks.module.eks_managed_node_group.data.aws_caller_identity.current (expand)" [label = "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current", shape = "box"]
		"[root] module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy (expand)" [label = "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy", shape = "box"]
		"[root] module.eks.module.eks_managed_node_group.data.aws_partition.current (expand)" [label = "module.eks.module.eks_managed_node_group.data.aws_partition.current", shape = "box"]
		"[root] module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group (expand)" [label = "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group", shape = "box"]
		"[root] module.eks.module.fargate_profile.aws_eks_fargate_profile.this (expand)" [label = "module.eks.module.fargate_profile.aws_eks_fargate_profile.this", shape = "box"]
		"[root] module.eks.module.fargate_profile.aws_iam_role.this (expand)" [label = "module.eks.module.fargate_profile.aws_iam_role.this", shape = "box"]
		"[root] module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional (expand)" [label = "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional", shape = "box"]
		"[root] module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this (expand)" [label = "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this", shape = "box"]
		"[root] module.eks.module.fargate_profile.data.aws_caller_identity.current (expand)" [label = "module.eks.module.fargate_profile.data.aws_caller_identity.current", shape = "box"]
		"[root] module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy (expand)" [label = "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy", shape = "box"]
		"[root] module.eks.module.fargate_profile.data.aws_partition.current (expand)" [label = "module.eks.module.fargate_profile.data.aws_partition.current", shape = "box"]
		"[root] module.eks.module.kms.aws_kms_alias.this (expand)" [label = "module.eks.module.kms.aws_kms_alias.this", shape = "box"]
		"[root] module.eks.module.kms.aws_kms_external_key.this (expand)" [label = "module.eks.module.kms.aws_kms_external_key.this", shape = "box"]
		"[root] module.eks.module.kms.aws_kms_grant.this (expand)" [label = "module.eks.module.kms.aws_kms_grant.this", shape = "box"]
		"[root] module.eks.module.kms.aws_kms_key.this (expand)" [label = "module.eks.module.kms.aws_kms_key.this", shape = "box"]
		"[root] module.eks.module.kms.data.aws_caller_identity.current (expand)" [label = "module.eks.module.kms.data.aws_caller_identity.current", shape = "box"]
		"[root] module.eks.module.kms.data.aws_iam_policy_document.this (expand)" [label = "module.eks.module.kms.data.aws_iam_policy_document.this", shape = "box"]
		"[root] module.eks.module.kms.data.aws_partition.current (expand)" [label = "module.eks.module.kms.data.aws_partition.current", shape = "box"]
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" [label = "module.eks.module.self_managed_node_group.aws_autoscaling_group.this", shape = "box"]
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this (expand)" [label = "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this", shape = "box"]
		"[root] module.eks.module.self_managed_node_group.aws_iam_instance_profile.this (expand)" [label = "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this", shape = "box"]
		"[root] module.eks.module.self_managed_node_group.aws_iam_role.this (expand)" [label = "module.eks.module.self_managed_node_group.aws_iam_role.this", shape = "box"]
		"[root] module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional (expand)" [label = "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional", shape = "box"]
		"[root] module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this (expand)" [label = "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this", shape = "box"]
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" [label = "module.eks.module.self_managed_node_group.aws_launch_template.this", shape = "box"]
		"[root] module.eks.module.self_managed_node_group.data.aws_ami.eks_default (expand)" [label = "module.eks.module.self_managed_node_group.data.aws_ami.eks_default", shape = "box"]
		"[root] module.eks.module.self_managed_node_group.data.aws_caller_identity.current (expand)" [label = "module.eks.module.self_managed_node_group.data.aws_caller_identity.current", shape = "box"]
		"[root] module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy (expand)" [label = "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy", shape = "box"]
		"[root] module.eks.module.self_managed_node_group.data.aws_partition.current (expand)" [label = "module.eks.module.self_managed_node_group.data.aws_partition.current", shape = "box"]
		"[root] module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group (expand)" [label = "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group", shape = "box"]
		"[root] module.eks.time_sleep.this (expand)" [label = "module.eks.time_sleep.this", shape = "box"]
		"[root] module.irsa-ebs-csi.aws_iam_role.this (expand)" [label = "module.irsa-ebs-csi.aws_iam_role.this", shape = "box"]
		"[root] module.irsa-ebs-csi.aws_iam_role_policy_attachment.custom (expand)" [label = "module.irsa-ebs-csi.aws_iam_role_policy_attachment.custom", shape = "box"]
		"[root] module.irsa-ebs-csi.data.aws_caller_identity.current (expand)" [label = "module.irsa-ebs-csi.data.aws_caller_identity.current", shape = "box"]
		"[root] module.irsa-ebs-csi.data.aws_iam_policy_document.assume_role_with_oidc (expand)" [label = "module.irsa-ebs-csi.data.aws_iam_policy_document.assume_role_with_oidc", shape = "box"]
		"[root] module.irsa-ebs-csi.data.aws_partition.current (expand)" [label = "module.irsa-ebs-csi.data.aws_partition.current", shape = "box"]
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" [label = "module.vpc.aws_cloudwatch_log_group.flow_log", shape = "box"]
		"[root] module.vpc.aws_customer_gateway.this (expand)" [label = "module.vpc.aws_customer_gateway.this", shape = "box"]
		"[root] module.vpc.aws_db_subnet_group.database (expand)" [label = "module.vpc.aws_db_subnet_group.database", shape = "box"]
		"[root] module.vpc.aws_default_network_acl.this (expand)" [label = "module.vpc.aws_default_network_acl.this", shape = "box"]
		"[root] module.vpc.aws_default_route_table.default (expand)" [label = "module.vpc.aws_default_route_table.default", shape = "box"]
		"[root] module.vpc.aws_default_security_group.this (expand)" [label = "module.vpc.aws_default_security_group.this", shape = "box"]
		"[root] module.vpc.aws_default_vpc.this (expand)" [label = "module.vpc.aws_default_vpc.this", shape = "box"]
		"[root] module.vpc.aws_egress_only_internet_gateway.this (expand)" [label = "module.vpc.aws_egress_only_internet_gateway.this", shape = "box"]
		"[root] module.vpc.aws_eip.nat (expand)" [label = "module.vpc.aws_eip.nat", shape = "box"]
		"[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)" [label = "module.vpc.aws_elasticache_subnet_group.elasticache", shape = "box"]
		"[root] module.vpc.aws_flow_log.this (expand)" [label = "module.vpc.aws_flow_log.this", shape = "box"]
		"[root] module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch (expand)" [label = "module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch", shape = "box"]
		"[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)" [label = "module.vpc.aws_iam_role.vpc_flow_log_cloudwatch", shape = "box"]
		"[root] module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch (expand)" [label = "module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch", shape = "box"]
		"[root] module.vpc.aws_internet_gateway.this (expand)" [label = "module.vpc.aws_internet_gateway.this", shape = "box"]
		"[root] module.vpc.aws_nat_gateway.this (expand)" [label = "module.vpc.aws_nat_gateway.this", shape = "box"]
		"[root] module.vpc.aws_network_acl.database (expand)" [label = "module.vpc.aws_network_acl.database", shape = "box"]
		"[root] module.vpc.aws_network_acl.elasticache (expand)" [label = "module.vpc.aws_network_acl.elasticache", shape = "box"]
		"[root] module.vpc.aws_network_acl.intra (expand)" [label = "module.vpc.aws_network_acl.intra", shape = "box"]
		"[root] module.vpc.aws_network_acl.outpost (expand)" [label = "module.vpc.aws_network_acl.outpost", shape = "box"]
		"[root] module.vpc.aws_network_acl.private (expand)" [label = "module.vpc.aws_network_acl.private", shape = "box"]
		"[root] module.vpc.aws_network_acl.public (expand)" [label = "module.vpc.aws_network_acl.public", shape = "box"]
		"[root] module.vpc.aws_network_acl.redshift (expand)" [label = "module.vpc.aws_network_acl.redshift", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.database_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.database_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.database_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.database_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.elasticache_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.elasticache_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.elasticache_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.elasticache_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.intra_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.intra_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.intra_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.intra_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.outpost_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.outpost_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.outpost_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.outpost_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.private_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.private_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.private_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.private_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.public_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.public_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.public_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.public_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.redshift_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.redshift_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.redshift_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.redshift_outbound", shape = "box"]
		"[root] module.vpc.aws_redshift_subnet_group.redshift (expand)" [label = "module.vpc.aws_redshift_subnet_group.redshift", shape = "box"]
		"[root] module.vpc.aws_route.database_dns64_nat_gateway (expand)" [label = "module.vpc.aws_route.database_dns64_nat_gateway", shape = "box"]
		"[root] module.vpc.aws_route.database_internet_gateway (expand)" [label = "module.vpc.aws_route.database_internet_gateway", shape = "box"]
		"[root] module.vpc.aws_route.database_ipv6_egress (expand)" [label = "module.vpc.aws_route.database_ipv6_egress", shape = "box"]
		"[root] module.vpc.aws_route.database_nat_gateway (expand)" [label = "module.vpc.aws_route.database_nat_gateway", shape = "box"]
		"[root] module.vpc.aws_route.private_dns64_nat_gateway (expand)" [label = "module.vpc.aws_route.private_dns64_nat_gateway", shape = "box"]
		"[root] module.vpc.aws_route.private_ipv6_egress (expand)" [label = "module.vpc.aws_route.private_ipv6_egress", shape = "box"]
		"[root] module.vpc.aws_route.private_nat_gateway (expand)" [label = "module.vpc.aws_route.private_nat_gateway", shape = "box"]
		"[root] module.vpc.aws_route.public_internet_gateway (expand)" [label = "module.vpc.aws_route.public_internet_gateway", shape = "box"]
		"[root] module.vpc.aws_route.public_internet_gateway_ipv6 (expand)" [label = "module.vpc.aws_route.public_internet_gateway_ipv6", shape = "box"]
		"[root] module.vpc.aws_route_table.database (expand)" [label = "module.vpc.aws_route_table.database", shape = "box"]
		"[root] module.vpc.aws_route_table.elasticache (expand)" [label = "module.vpc.aws_route_table.elasticache", shape = "box"]
		"[root] module.vpc.aws_route_table.intra (expand)" [label = "module.vpc.aws_route_table.intra", shape = "box"]
		"[root] module.vpc.aws_route_table.private (expand)" [label = "module.vpc.aws_route_table.private", shape = "box"]
		"[root] module.vpc.aws_route_table.public (expand)" [label = "module.vpc.aws_route_table.public", shape = "box"]
		"[root] module.vpc.aws_route_table.redshift (expand)" [label = "module.vpc.aws_route_table.redshift", shape = "box"]
		"[root] module.vpc.aws_route_table_association.database (expand)" [label = "module.vpc.aws_route_table_association.database", shape = "box"]
		"[root] module.vpc.aws_route_table_association.elasticache (expand)" [label = "module.vpc.aws_route_table_association.elasticache", shape = "box"]
		"[root] module.vpc.aws_route_table_association.intra (expand)" [label = "module.vpc.aws_route_table_association.intra", shape = "box"]
		"[root] module.vpc.aws_route_table_association.outpost (expand)" [label = "module.vpc.aws_route_table_association.outpost", shape = "box"]
		"[root] module.vpc.aws_route_table_association.private (expand)" [label = "module.vpc.aws_route_table_association.private", shape = "box"]
		"[root] module.vpc.aws_route_table_association.public (expand)" [label = "module.vpc.aws_route_table_association.public", shape = "box"]
		"[root] module.vpc.aws_route_table_association.redshift (expand)" [label = "module.vpc.aws_route_table_association.redshift", shape = "box"]
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" [label = "module.vpc.aws_route_table_association.redshift_public", shape = "box"]
		"[root] module.vpc.aws_subnet.database (expand)" [label = "module.vpc.aws_subnet.database", shape = "box"]
		"[root] module.vpc.aws_subnet.elasticache (expand)" [label = "module.vpc.aws_subnet.elasticache", shape = "box"]
		"[root] module.vpc.aws_subnet.intra (expand)" [label = "module.vpc.aws_subnet.intra", shape = "box"]
		"[root] module.vpc.aws_subnet.outpost (expand)" [label = "module.vpc.aws_subnet.outpost", shape = "box"]
		"[root] module.vpc.aws_subnet.private (expand)" [label = "module.vpc.aws_subnet.private", shape = "box"]
		"[root] module.vpc.aws_subnet.public (expand)" [label = "module.vpc.aws_subnet.public", shape = "box"]
		"[root] module.vpc.aws_subnet.redshift (expand)" [label = "module.vpc.aws_subnet.redshift", shape = "box"]
		"[root] module.vpc.aws_vpc.this (expand)" [label = "module.vpc.aws_vpc.this", shape = "box"]
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" [label = "module.vpc.aws_vpc_dhcp_options.this", shape = "box"]
		"[root] module.vpc.aws_vpc_dhcp_options_association.this (expand)" [label = "module.vpc.aws_vpc_dhcp_options_association.this", shape = "box"]
		"[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)" [label = "module.vpc.aws_vpc_ipv4_cidr_block_association.this", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway.this (expand)" [label = "module.vpc.aws_vpn_gateway.this", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway_attachment.this (expand)" [label = "module.vpc.aws_vpn_gateway_attachment.this", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)" [label = "module.vpc.aws_vpn_gateway_route_propagation.intra", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)" [label = "module.vpc.aws_vpn_gateway_route_propagation.private", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)" [label = "module.vpc.aws_vpn_gateway_route_propagation.public", shape = "box"]
		"[root] module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role (expand)" [label = "module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role", shape = "box"]
		"[root] module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch (expand)" [label = "module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch", shape = "box"]
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" [label = "provider[\"registry.terraform.io/hashicorp/aws\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/cloudinit\"]" [label = "provider[\"registry.terraform.io/hashicorp/cloudinit\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/kubernetes\"]" [label = "provider[\"registry.terraform.io/hashicorp/kubernetes\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/random\"]" [label = "provider[\"registry.terraform.io/hashicorp/random\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/time\"]" [label = "provider[\"registry.terraform.io/hashicorp/time\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/tls\"]" [label = "provider[\"registry.terraform.io/hashicorp/tls\"]", shape = "diamond"]
		"[root] random_string.suffix (expand)" [label = "random_string.suffix", shape = "box"]
		"[root] var.region" [label = "var.region", shape = "note"]
		"[root] aws_eks_addon.ebs-csi (expand)" -> "[root] module.irsa-ebs-csi.output.iam_role_arn (expand)"
		"[root] data.aws_availability_zones.available (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] data.aws_iam_policy.ebs_csi_policy (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] local.cluster_name (expand)" -> "[root] random_string.suffix (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.aws_ec2_tag.cluster_primary_security_group (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.aws_iam_role_policy_attachment.additional (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.aws_iam_role_policy_attachment.cluster_encryption (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.kubernetes_config_map_v1_data.aws_auth (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.module.kms (close)"
		"[root] module.eks (close)" -> "[root] module.eks.output.aws_auth_configmap_yaml (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cloudwatch_log_group_arn (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cloudwatch_log_group_name (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cluster_addons (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cluster_arn (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cluster_certificate_authority_data (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cluster_endpoint (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cluster_iam_role_arn (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cluster_iam_role_name (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cluster_iam_role_unique_id (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cluster_id (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cluster_identity_providers (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cluster_name (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cluster_oidc_issuer_url (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cluster_platform_version (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cluster_primary_security_group_id (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cluster_security_group_arn (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cluster_security_group_id (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cluster_status (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cluster_tls_certificate_sha1_fingerprint (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cluster_version (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.eks_managed_node_groups (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.eks_managed_node_groups_autoscaling_group_names (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.fargate_profiles (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.kms_key_arn (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.kms_key_id (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.kms_key_policy (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.node_security_group_arn (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.node_security_group_id (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.oidc_provider (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.oidc_provider_arn (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.self_managed_node_groups (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.self_managed_node_groups_autoscaling_group_names (expand)"
		"[root] module.eks.aws_cloudwatch_log_group.this (expand)" -> "[root] module.eks.local.create (expand)"
		"[root] module.eks.aws_cloudwatch_log_group.this (expand)" -> "[root] module.eks.var.cloudwatch_log_group_kms_key_id (expand)"
		"[root] module.eks.aws_cloudwatch_log_group.this (expand)" -> "[root] module.eks.var.cloudwatch_log_group_retention_in_days (expand)"
		"[root] module.eks.aws_cloudwatch_log_group.this (expand)" -> "[root] module.eks.var.cluster_name (expand)"
		"[root] module.eks.aws_cloudwatch_log_group.this (expand)" -> "[root] module.eks.var.create_cloudwatch_log_group (expand)"
		"[root] module.eks.aws_cloudwatch_log_group.this (expand)" -> "[root] module.eks.var.tags (expand)"
		"[root] module.eks.aws_cloudwatch_log_group.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.eks.aws_ec2_tag.cluster_primary_security_group (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.aws_ec2_tag.cluster_primary_security_group (expand)" -> "[root] module.eks.var.create_cluster_primary_security_group_tags (expand)"
		"[root] module.eks.aws_eks_addon.before_compute (expand)" -> "[root] module.eks.data.aws_eks_addon_version.this (expand)"
		"[root] module.eks.aws_eks_addon.before_compute (expand)" -> "[root] module.eks.var.cluster_addons_timeouts (expand)"
		"[root] module.eks.aws_eks_addon.this (expand)" -> "[root] module.eks.data.aws_eks_addon_version.this (expand)"
		"[root] module.eks.aws_eks_addon.this (expand)" -> "[root] module.eks.module.eks_managed_node_group (close)"
		"[root] module.eks.aws_eks_addon.this (expand)" -> "[root] module.eks.module.fargate_profile (close)"
		"[root] module.eks.aws_eks_addon.this (expand)" -> "[root] module.eks.module.self_managed_node_group (close)"
		"[root] module.eks.aws_eks_addon.this (expand)" -> "[root] module.eks.var.cluster_addons_timeouts (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.aws_cloudwatch_log_group.this (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.aws_iam_policy.cni_ipv6_policy (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.aws_iam_role_policy_attachment.this (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.aws_security_group_rule.cluster (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.aws_security_group_rule.node (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.module.kms.output.key_arn (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.var.cluster_additional_security_group_ids (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.var.cluster_enabled_log_types (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.var.cluster_endpoint_private_access (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.var.cluster_endpoint_public_access (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.var.cluster_endpoint_public_access_cidrs (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.var.cluster_service_ipv4_cidr (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.var.cluster_service_ipv6_cidr (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.var.cluster_tags (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.var.cluster_timeouts (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.var.cluster_version (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.var.control_plane_subnet_ids (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.var.subnet_ids (expand)"
		"[root] module.eks.aws_eks_identity_provider_config.this (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.aws_eks_identity_provider_config.this (expand)" -> "[root] module.eks.var.cluster_identity_providers (expand)"
		"[root] module.eks.aws_iam_openid_connect_provider.oidc_provider (expand)" -> "[root] module.eks.data.tls_certificate.this (expand)"
		"[root] module.eks.aws_iam_openid_connect_provider.oidc_provider (expand)" -> "[root] module.eks.var.custom_oidc_thumbprints (expand)"
		"[root] module.eks.aws_iam_openid_connect_provider.oidc_provider (expand)" -> "[root] module.eks.var.openid_connect_audiences (expand)"
		"[root] module.eks.aws_iam_policy.cluster_encryption (expand)" -> "[root] module.eks.local.cluster_encryption_policy_name (expand)"
		"[root] module.eks.aws_iam_policy.cluster_encryption (expand)" -> "[root] module.eks.module.kms.output.key_arn (expand)"
		"[root] module.eks.aws_iam_policy.cluster_encryption (expand)" -> "[root] module.eks.var.attach_cluster_encryption_policy (expand)"
		"[root] module.eks.aws_iam_policy.cluster_encryption (expand)" -> "[root] module.eks.var.cluster_encryption_policy_description (expand)"
		"[root] module.eks.aws_iam_policy.cluster_encryption (expand)" -> "[root] module.eks.var.cluster_encryption_policy_path (expand)"
		"[root] module.eks.aws_iam_policy.cluster_encryption (expand)" -> "[root] module.eks.var.cluster_encryption_policy_tags (expand)"
		"[root] module.eks.aws_iam_policy.cluster_encryption (expand)" -> "[root] module.eks.var.cluster_encryption_policy_use_name_prefix (expand)"
		"[root] module.eks.aws_iam_policy.cni_ipv6_policy (expand)" -> "[root] module.eks.data.aws_iam_policy_document.cni_ipv6_policy (expand)"
		"[root] module.eks.aws_iam_policy.cni_ipv6_policy (expand)" -> "[root] module.eks.var.tags (expand)"
		"[root] module.eks.aws_iam_role.this (expand)" -> "[root] module.eks.data.aws_iam_policy_document.assume_role_policy (expand)"
		"[root] module.eks.aws_iam_role.this (expand)" -> "[root] module.eks.local.create_iam_role (expand)"
		"[root] module.eks.aws_iam_role.this (expand)" -> "[root] module.eks.local.iam_role_name (expand)"
		"[root] module.eks.aws_iam_role.this (expand)" -> "[root] module.eks.var.create_cloudwatch_log_group (expand)"
		"[root] module.eks.aws_iam_role.this (expand)" -> "[root] module.eks.var.iam_role_description (expand)"
		"[root] module.eks.aws_iam_role.this (expand)" -> "[root] module.eks.var.iam_role_path (expand)"
		"[root] module.eks.aws_iam_role.this (expand)" -> "[root] module.eks.var.iam_role_permissions_boundary (expand)"
		"[root] module.eks.aws_iam_role.this (expand)" -> "[root] module.eks.var.iam_role_tags (expand)"
		"[root] module.eks.aws_iam_role.this (expand)" -> "[root] module.eks.var.iam_role_use_name_prefix (expand)"
		"[root] module.eks.aws_iam_role.this (expand)" -> "[root] module.eks.var.prefix_separator (expand)"
		"[root] module.eks.aws_iam_role.this (expand)" -> "[root] module.eks.var.tags (expand)"
		"[root] module.eks.aws_iam_role_policy_attachment.additional (expand)" -> "[root] module.eks.aws_iam_role.this (expand)"
		"[root] module.eks.aws_iam_role_policy_attachment.additional (expand)" -> "[root] module.eks.var.iam_role_additional_policies (expand)"
		"[root] module.eks.aws_iam_role_policy_attachment.cluster_encryption (expand)" -> "[root] module.eks.aws_iam_policy.cluster_encryption (expand)"
		"[root] module.eks.aws_iam_role_policy_attachment.this (expand)" -> "[root] module.eks.aws_iam_role.this (expand)"
		"[root] module.eks.aws_iam_role_policy_attachment.this (expand)" -> "[root] module.eks.local.iam_role_policy_prefix (expand)"
		"[root] module.eks.aws_security_group.cluster (expand)" -> "[root] module.eks.local.cluster_sg_name (expand)"
		"[root] module.eks.aws_security_group.cluster (expand)" -> "[root] module.eks.local.create_cluster_sg (expand)"
		"[root] module.eks.aws_security_group.cluster (expand)" -> "[root] module.eks.var.cluster_security_group_description (expand)"
		"[root] module.eks.aws_security_group.cluster (expand)" -> "[root] module.eks.var.cluster_security_group_tags (expand)"
		"[root] module.eks.aws_security_group.cluster (expand)" -> "[root] module.eks.var.cluster_security_group_use_name_prefix (expand)"
		"[root] module.eks.aws_security_group.cluster (expand)" -> "[root] module.eks.var.prefix_separator (expand)"
		"[root] module.eks.aws_security_group.cluster (expand)" -> "[root] module.eks.var.tags (expand)"
		"[root] module.eks.aws_security_group.cluster (expand)" -> "[root] module.eks.var.vpc_id (expand)"
		"[root] module.eks.aws_security_group.node (expand)" -> "[root] module.eks.local.create_node_sg (expand)"
		"[root] module.eks.aws_security_group.node (expand)" -> "[root] module.eks.local.node_sg_name (expand)"
		"[root] module.eks.aws_security_group.node (expand)" -> "[root] module.eks.var.node_security_group_description (expand)"
		"[root] module.eks.aws_security_group.node (expand)" -> "[root] module.eks.var.node_security_group_tags (expand)"
		"[root] module.eks.aws_security_group.node (expand)" -> "[root] module.eks.var.node_security_group_use_name_prefix (expand)"
		"[root] module.eks.aws_security_group.node (expand)" -> "[root] module.eks.var.prefix_separator (expand)"
		"[root] module.eks.aws_security_group.node (expand)" -> "[root] module.eks.var.tags (expand)"
		"[root] module.eks.aws_security_group.node (expand)" -> "[root] module.eks.var.vpc_id (expand)"
		"[root] module.eks.aws_security_group_rule.cluster (expand)" -> "[root] module.eks.aws_security_group.cluster (expand)"
		"[root] module.eks.aws_security_group_rule.cluster (expand)" -> "[root] module.eks.local.cluster_security_group_rules (expand)"
		"[root] module.eks.aws_security_group_rule.cluster (expand)" -> "[root] module.eks.local.node_security_group_id (expand)"
		"[root] module.eks.aws_security_group_rule.cluster (expand)" -> "[root] module.eks.var.cluster_security_group_additional_rules (expand)"
		"[root] module.eks.aws_security_group_rule.node (expand)" -> "[root] module.eks.aws_security_group.node (expand)"
		"[root] module.eks.aws_security_group_rule.node (expand)" -> "[root] module.eks.local.cluster_security_group_id (expand)"
		"[root] module.eks.aws_security_group_rule.node (expand)" -> "[root] module.eks.local.node_security_group_recommended_rules (expand)"
		"[root] module.eks.aws_security_group_rule.node (expand)" -> "[root] module.eks.local.node_security_group_rules (expand)"
		"[root] module.eks.aws_security_group_rule.node (expand)" -> "[root] module.eks.var.node_security_group_additional_rules (expand)"
		"[root] module.eks.data.aws_caller_identity.current (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.data.aws_caller_identity.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.eks.data.aws_eks_addon_version.this (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.data.aws_eks_addon_version.this (expand)" -> "[root] module.eks.var.cluster_addons (expand)"
		"[root] module.eks.data.aws_iam_policy_document.assume_role_policy (expand)" -> "[root] module.eks.local.create (expand)"
		"[root] module.eks.data.aws_iam_policy_document.assume_role_policy (expand)" -> "[root] module.eks.local.create_outposts_local_cluster (expand)"
		"[root] module.eks.data.aws_iam_policy_document.assume_role_policy (expand)" -> "[root] module.eks.local.dns_suffix (expand)"
		"[root] module.eks.data.aws_iam_policy_document.assume_role_policy (expand)" -> "[root] module.eks.var.create_iam_role (expand)"
		"[root] module.eks.data.aws_iam_policy_document.cni_ipv6_policy (expand)" -> "[root] module.eks.data.aws_partition.current (expand)"
		"[root] module.eks.data.aws_iam_policy_document.cni_ipv6_policy (expand)" -> "[root] module.eks.var.create (expand)"
		"[root] module.eks.data.aws_iam_policy_document.cni_ipv6_policy (expand)" -> "[root] module.eks.var.create_cni_ipv6_iam_policy (expand)"
		"[root] module.eks.data.aws_iam_session_context.current (expand)" -> "[root] module.eks.data.aws_caller_identity.current (expand)"
		"[root] module.eks.data.aws_partition.current (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.data.aws_partition.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.eks.data.tls_certificate.this (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.data.tls_certificate.this (expand)" -> "[root] module.eks.var.enable_irsa (expand)"
		"[root] module.eks.data.tls_certificate.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/tls\"]"
		"[root] module.eks.kubernetes_config_map.aws_auth (expand)" -> "[root] module.eks.local.aws_auth_configmap_data (expand)"
		"[root] module.eks.kubernetes_config_map.aws_auth (expand)" -> "[root] module.eks.var.create_aws_auth_configmap (expand)"
		"[root] module.eks.kubernetes_config_map.aws_auth (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
		"[root] module.eks.kubernetes_config_map_v1_data.aws_auth (expand)" -> "[root] module.eks.kubernetes_config_map.aws_auth (expand)"
		"[root] module.eks.kubernetes_config_map_v1_data.aws_auth (expand)" -> "[root] module.eks.var.manage_aws_auth_configmap (expand)"
		"[root] module.eks.local.aws_auth_configmap_data (expand)" -> "[root] module.eks.local.fargate_profile_pod_execution_role_arns (expand)"
		"[root] module.eks.local.aws_auth_configmap_data (expand)" -> "[root] module.eks.local.node_iam_role_arns_non_windows (expand)"
		"[root] module.eks.local.aws_auth_configmap_data (expand)" -> "[root] module.eks.local.node_iam_role_arns_windows (expand)"
		"[root] module.eks.local.aws_auth_configmap_data (expand)" -> "[root] module.eks.var.aws_auth_accounts (expand)"
		"[root] module.eks.local.aws_auth_configmap_data (expand)" -> "[root] module.eks.var.aws_auth_roles (expand)"
		"[root] module.eks.local.aws_auth_configmap_data (expand)" -> "[root] module.eks.var.aws_auth_users (expand)"
		"[root] module.eks.local.cluster_encryption_policy_name (expand)" -> "[root] module.eks.local.iam_role_name (expand)"
		"[root] module.eks.local.cluster_encryption_policy_name (expand)" -> "[root] module.eks.var.cluster_encryption_policy_name (expand)"
		"[root] module.eks.local.cluster_role (expand)" -> "[root] module.eks.aws_iam_role.this (expand)"
		"[root] module.eks.local.cluster_role (expand)" -> "[root] module.eks.var.iam_role_arn (expand)"
		"[root] module.eks.local.cluster_security_group_id (expand)" -> "[root] module.eks.aws_security_group.cluster (expand)"
		"[root] module.eks.local.cluster_security_group_id (expand)" -> "[root] module.eks.var.cluster_security_group_id (expand)"
		"[root] module.eks.local.cluster_security_group_rules (expand)" -> "[root] module.eks.local.create_node_sg (expand)"
		"[root] module.eks.local.cluster_sg_name (expand)" -> "[root] module.eks.var.cluster_name (expand)"
		"[root] module.eks.local.cluster_sg_name (expand)" -> "[root] module.eks.var.cluster_security_group_name (expand)"
		"[root] module.eks.local.create (expand)" -> "[root] module.eks.var.create (expand)"
		"[root] module.eks.local.create (expand)" -> "[root] module.eks.var.putin_khuylo (expand)"
		"[root] module.eks.local.create_cluster_sg (expand)" -> "[root] module.eks.local.create (expand)"
		"[root] module.eks.local.create_cluster_sg (expand)" -> "[root] module.eks.var.create_cluster_security_group (expand)"
		"[root] module.eks.local.create_iam_role (expand)" -> "[root] module.eks.local.create (expand)"
		"[root] module.eks.local.create_iam_role (expand)" -> "[root] module.eks.var.create_iam_role (expand)"
		"[root] module.eks.local.create_node_sg (expand)" -> "[root] module.eks.var.create (expand)"
		"[root] module.eks.local.create_node_sg (expand)" -> "[root] module.eks.var.create_node_security_group (expand)"
		"[root] module.eks.local.create_outposts_local_cluster (expand)" -> "[root] module.eks.var.outpost_config (expand)"
		"[root] module.eks.local.default_instance_refresh (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.local.default_update_config (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.local.dns_suffix (expand)" -> "[root] module.eks.data.aws_partition.current (expand)"
		"[root] module.eks.local.dns_suffix (expand)" -> "[root] module.eks.var.cluster_iam_role_dns_suffix (expand)"
		"[root] module.eks.local.enable_cluster_encryption_config (expand)" -> "[root] module.eks.local.create_outposts_local_cluster (expand)"
		"[root] module.eks.local.enable_cluster_encryption_config (expand)" -> "[root] module.eks.var.cluster_encryption_config (expand)"
		"[root] module.eks.local.fargate_profile_pod_execution_role_arns (expand)" -> "[root] module.eks.module.fargate_profile (close)"
		"[root] module.eks.local.fargate_profile_pod_execution_role_arns (expand)" -> "[root] module.eks.var.aws_auth_fargate_profile_pod_execution_role_arns (expand)"
		"[root] module.eks.local.iam_role_name (expand)" -> "[root] module.eks.var.cluster_name (expand)"
		"[root] module.eks.local.iam_role_name (expand)" -> "[root] module.eks.var.iam_role_name (expand)"
		"[root] module.eks.local.iam_role_policy_prefix (expand)" -> "[root] module.eks.data.aws_partition.current (expand)"
		"[root] module.eks.local.metadata_options (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.local.node_iam_role_arns_non_windows (expand)" -> "[root] module.eks.module.eks_managed_node_group (close)"
		"[root] module.eks.local.node_iam_role_arns_non_windows (expand)" -> "[root] module.eks.module.self_managed_node_group (close)"
		"[root] module.eks.local.node_iam_role_arns_non_windows (expand)" -> "[root] module.eks.var.aws_auth_node_iam_role_arns_non_windows (expand)"
		"[root] module.eks.local.node_iam_role_arns_windows (expand)" -> "[root] module.eks.module.self_managed_node_group (close)"
		"[root] module.eks.local.node_iam_role_arns_windows (expand)" -> "[root] module.eks.var.aws_auth_node_iam_role_arns_windows (expand)"
		"[root] module.eks.local.node_security_group_id (expand)" -> "[root] module.eks.aws_security_group.node (expand)"
		"[root] module.eks.local.node_security_group_id (expand)" -> "[root] module.eks.var.node_security_group_id (expand)"
		"[root] module.eks.local.node_security_group_recommended_rules (expand)" -> "[root] module.eks.var.cluster_ip_family (expand)"
		"[root] module.eks.local.node_security_group_recommended_rules (expand)" -> "[root] module.eks.var.node_security_group_enable_recommended_rules (expand)"
		"[root] module.eks.local.node_security_group_rules (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.local.node_sg_name (expand)" -> "[root] module.eks.var.cluster_name (expand)"
		"[root] module.eks.local.node_sg_name (expand)" -> "[root] module.eks.var.node_security_group_name (expand)"
		"[root] module.eks.module.eks_managed_node_group (close)" -> "[root] module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional (expand)"
		"[root] module.eks.module.eks_managed_node_group (close)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data (close)"
		"[root] module.eks.module.eks_managed_node_group (close)" -> "[root] module.eks.module.eks_managed_node_group.output.autoscaling_group_schedule_arns (expand)"
		"[root] module.eks.module.eks_managed_node_group (close)" -> "[root] module.eks.module.eks_managed_node_group.output.iam_role_arn (expand)"
		"[root] module.eks.module.eks_managed_node_group (close)" -> "[root] module.eks.module.eks_managed_node_group.output.iam_role_name (expand)"
		"[root] module.eks.module.eks_managed_node_group (close)" -> "[root] module.eks.module.eks_managed_node_group.output.iam_role_unique_id (expand)"
		"[root] module.eks.module.eks_managed_node_group (close)" -> "[root] module.eks.module.eks_managed_node_group.output.launch_template_arn (expand)"
		"[root] module.eks.module.eks_managed_node_group (close)" -> "[root] module.eks.module.eks_managed_node_group.output.launch_template_id (expand)"
		"[root] module.eks.module.eks_managed_node_group (close)" -> "[root] module.eks.module.eks_managed_node_group.output.launch_template_latest_version (expand)"
		"[root] module.eks.module.eks_managed_node_group (close)" -> "[root] module.eks.module.eks_managed_node_group.output.launch_template_name (expand)"
		"[root] module.eks.module.eks_managed_node_group (close)" -> "[root] module.eks.module.eks_managed_node_group.output.node_group_arn (expand)"
		"[root] module.eks.module.eks_managed_node_group (close)" -> "[root] module.eks.module.eks_managed_node_group.output.node_group_autoscaling_group_names (expand)"
		"[root] module.eks.module.eks_managed_node_group (close)" -> "[root] module.eks.module.eks_managed_node_group.output.node_group_id (expand)"
		"[root] module.eks.module.eks_managed_node_group (close)" -> "[root] module.eks.module.eks_managed_node_group.output.node_group_labels (expand)"
		"[root] module.eks.module.eks_managed_node_group (close)" -> "[root] module.eks.module.eks_managed_node_group.output.node_group_resources (expand)"
		"[root] module.eks.module.eks_managed_node_group (close)" -> "[root] module.eks.module.eks_managed_node_group.output.node_group_status (expand)"
		"[root] module.eks.module.eks_managed_node_group (close)" -> "[root] module.eks.module.eks_managed_node_group.output.node_group_taints (expand)"
		"[root] module.eks.module.eks_managed_node_group (expand)" -> "[root] module.eks.local.create_outposts_local_cluster (expand)"
		"[root] module.eks.module.eks_managed_node_group (expand)" -> "[root] module.eks.var.create (expand)"
		"[root] module.eks.module.eks_managed_node_group (expand)" -> "[root] module.eks.var.eks_managed_node_groups (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.aws_eks_node_group.this (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.create_schedule (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.schedules (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_eks_node_group.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.local.launch_template_id (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_eks_node_group.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.local.launch_template_version (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_eks_node_group.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.ami_release_version (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_eks_node_group.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.ami_type (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_eks_node_group.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.capacity_type (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_eks_node_group.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.cluster_version (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_eks_node_group.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.desired_size (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_eks_node_group.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.disk_size (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_eks_node_group.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.force_update_version (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_eks_node_group.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.iam_role_arn (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_eks_node_group.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.instance_types (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_eks_node_group.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.labels (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_eks_node_group.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.max_size (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_eks_node_group.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.min_size (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_eks_node_group.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.remote_access (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_eks_node_group.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.subnet_ids (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_eks_node_group.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.taints (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_eks_node_group.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.timeouts (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_eks_node_group.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.update_config (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_eks_node_group.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.use_name_prefix (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_iam_role.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_iam_role.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.local.iam_role_name (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_iam_role.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.iam_role_description (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_iam_role.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.iam_role_path (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_iam_role.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.iam_role_permissions_boundary (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_iam_role.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.iam_role_tags (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_iam_role.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.iam_role_use_name_prefix (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_iam_role.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.tags (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional (expand)" -> "[root] module.eks.module.eks_managed_node_group.aws_iam_role.this (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.iam_role_additional_policies (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.aws_iam_role.this (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.local.cni_policy (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.iam_role_attach_cni_policy (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.local.launch_template_name (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.local.security_group_ids (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data.output.user_data (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.ami_id (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.block_device_mappings (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.capacity_reservation_specification (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.cpu_options (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.create_launch_template (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.credit_specification (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.disable_api_termination (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.ebs_optimized (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.elastic_gpu_specifications (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.elastic_inference_accelerator (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.enable_monitoring (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.enclave_options (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.instance_market_options (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.kernel_id (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.key_name (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.launch_template_default_version (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.launch_template_description (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.launch_template_tags (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.launch_template_use_name_prefix (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.license_specifications (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.maintenance_options (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.metadata_options (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.network_interfaces (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.placement (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.private_dns_name_options (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.ram_disk_id (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.tag_specifications (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.update_launch_template_default_version (expand)"
		"[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.use_custom_launch_template (expand)"
		"[root] module.eks.module.eks_managed_node_group.data.aws_caller_identity.current (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.data.aws_caller_identity.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy (expand)" -> "[root] module.eks.module.eks_managed_node_group.data.aws_partition.current (expand)"
		"[root] module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.create (expand)"
		"[root] module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.create_iam_role (expand)"
		"[root] module.eks.module.eks_managed_node_group.data.aws_partition.current (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.data.aws_partition.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.eks.module.eks_managed_node_group.local.cni_policy (expand)" -> "[root] module.eks.module.eks_managed_node_group.data.aws_caller_identity.current (expand)"
		"[root] module.eks.module.eks_managed_node_group.local.cni_policy (expand)" -> "[root] module.eks.module.eks_managed_node_group.local.iam_role_policy_prefix (expand)"
		"[root] module.eks.module.eks_managed_node_group.local.cni_policy (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.cluster_ip_family (expand)"
		"[root] module.eks.module.eks_managed_node_group.local.iam_role_name (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.iam_role_name (expand)"
		"[root] module.eks.module.eks_managed_node_group.local.iam_role_name (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.name (expand)"
		"[root] module.eks.module.eks_managed_node_group.local.iam_role_policy_prefix (expand)" -> "[root] module.eks.module.eks_managed_node_group.data.aws_partition.current (expand)"
		"[root] module.eks.module.eks_managed_node_group.local.launch_template_id (expand)" -> "[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)"
		"[root] module.eks.module.eks_managed_node_group.local.launch_template_id (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.launch_template_id (expand)"
		"[root] module.eks.module.eks_managed_node_group.local.launch_template_name (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.launch_template_name (expand)"
		"[root] module.eks.module.eks_managed_node_group.local.launch_template_name (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.name (expand)"
		"[root] module.eks.module.eks_managed_node_group.local.launch_template_version (expand)" -> "[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)"
		"[root] module.eks.module.eks_managed_node_group.local.launch_template_version (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.launch_template_version (expand)"
		"[root] module.eks.module.eks_managed_node_group.local.security_group_ids (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.cluster_primary_security_group_id (expand)"
		"[root] module.eks.module.eks_managed_node_group.local.security_group_ids (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.vpc_security_group_ids (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data (close)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data.output.user_data (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data.var.create (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data.var.enable_bootstrap_user_data (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data.var.is_eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data.var.platform (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data.var.pre_bootstrap_user_data (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data.var.user_data_template_path (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/cloudinit\"]"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.local.int_linux_default_user_data (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data.var.bootstrap_extra_args (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.local.int_linux_default_user_data (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data.var.cluster_auth_base64 (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.local.int_linux_default_user_data (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data.var.cluster_endpoint (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.local.int_linux_default_user_data (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data.var.cluster_name (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.local.int_linux_default_user_data (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data.var.cluster_service_ipv4_cidr (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.local.int_linux_default_user_data (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data.var.create (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.local.int_linux_default_user_data (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data.var.enable_bootstrap_user_data (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.local.int_linux_default_user_data (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data.var.platform (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.local.int_linux_default_user_data (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data.var.post_bootstrap_user_data (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.local.int_linux_default_user_data (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data.var.pre_bootstrap_user_data (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.local.int_linux_default_user_data (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data.var.user_data_template_path (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.local.platform (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.local.platform (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data.local.int_linux_default_user_data (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.output.user_data (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data.local.platform (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.var.bootstrap_extra_args (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.var.bootstrap_extra_args (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.bootstrap_extra_args (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.var.cluster_auth_base64 (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.var.cluster_auth_base64 (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.cluster_auth_base64 (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.var.cluster_endpoint (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.var.cluster_endpoint (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.cluster_endpoint (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.var.cluster_name (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.var.cluster_name (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.cluster_name (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.var.cluster_service_ipv4_cidr (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.var.cluster_service_ipv4_cidr (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.cluster_service_ipv4_cidr (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.var.create (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.var.create (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.create (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.var.enable_bootstrap_user_data (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.var.enable_bootstrap_user_data (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.enable_bootstrap_user_data (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.var.is_eks_managed_node_group (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.var.platform (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.var.platform (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.platform (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.var.post_bootstrap_user_data (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.var.post_bootstrap_user_data (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.post_bootstrap_user_data (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.var.pre_bootstrap_user_data (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.var.pre_bootstrap_user_data (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.pre_bootstrap_user_data (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.var.user_data_template_path (expand)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data (expand)"
		"[root] module.eks.module.eks_managed_node_group.module.user_data.var.user_data_template_path (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.user_data_template_path (expand)"
		"[root] module.eks.module.eks_managed_node_group.output.autoscaling_group_schedule_arns (expand)" -> "[root] module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this (expand)"
		"[root] module.eks.module.eks_managed_node_group.output.iam_role_arn (expand)" -> "[root] module.eks.module.eks_managed_node_group.aws_iam_role.this (expand)"
		"[root] module.eks.module.eks_managed_node_group.output.iam_role_arn (expand)" -> "[root] module.eks.module.eks_managed_node_group.var.iam_role_arn (expand)"
		"[root] module.eks.module.eks_managed_node_group.output.iam_role_name (expand)" -> "[root] module.eks.module.eks_managed_node_group.aws_iam_role.this (expand)"
		"[root] module.eks.module.eks_managed_node_group.output.iam_role_unique_id (expand)" -> "[root] module.eks.module.eks_managed_node_group.aws_iam_role.this (expand)"
		"[root] module.eks.module.eks_managed_node_group.output.launch_template_arn (expand)" -> "[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)"
		"[root] module.eks.module.eks_managed_node_group.output.launch_template_id (expand)" -> "[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)"
		"[root] module.eks.module.eks_managed_node_group.output.launch_template_latest_version (expand)" -> "[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)"
		"[root] module.eks.module.eks_managed_node_group.output.launch_template_name (expand)" -> "[root] module.eks.module.eks_managed_node_group.aws_launch_template.this (expand)"
		"[root] module.eks.module.eks_managed_node_group.output.node_group_arn (expand)" -> "[root] module.eks.module.eks_managed_node_group.aws_eks_node_group.this (expand)"
		"[root] module.eks.module.eks_managed_node_group.output.node_group_autoscaling_group_names (expand)" -> "[root] module.eks.module.eks_managed_node_group.aws_eks_node_group.this (expand)"
		"[root] module.eks.module.eks_managed_node_group.output.node_group_id (expand)" -> "[root] module.eks.module.eks_managed_node_group.aws_eks_node_group.this (expand)"
		"[root] module.eks.module.eks_managed_node_group.output.node_group_labels (expand)" -> "[root] module.eks.module.eks_managed_node_group.aws_eks_node_group.this (expand)"
		"[root] module.eks.module.eks_managed_node_group.output.node_group_resources (expand)" -> "[root] module.eks.module.eks_managed_node_group.aws_eks_node_group.this (expand)"
		"[root] module.eks.module.eks_managed_node_group.output.node_group_status (expand)" -> "[root] module.eks.module.eks_managed_node_group.aws_eks_node_group.this (expand)"
		"[root] module.eks.module.eks_managed_node_group.output.node_group_taints (expand)" -> "[root] module.eks.module.eks_managed_node_group.aws_eks_node_group.this (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.ami_id (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.ami_id (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.ami_release_version (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.ami_release_version (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.ami_type (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.ami_type (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.block_device_mappings (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.block_device_mappings (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.bootstrap_extra_args (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.bootstrap_extra_args (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.capacity_reservation_specification (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.capacity_reservation_specification (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.capacity_type (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.capacity_type (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.cluster_auth_base64 (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.cluster_auth_base64 (expand)" -> "[root] module.eks.time_sleep.this (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.cluster_endpoint (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.cluster_endpoint (expand)" -> "[root] module.eks.time_sleep.this (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.cluster_ip_family (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.cluster_ip_family (expand)" -> "[root] module.eks.var.cluster_ip_family (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.cluster_name (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.cluster_name (expand)" -> "[root] module.eks.time_sleep.this (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.cluster_primary_security_group_id (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.cluster_primary_security_group_id (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.cluster_primary_security_group_id (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.cluster_service_ipv4_cidr (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.cluster_service_ipv4_cidr (expand)" -> "[root] module.eks.var.cluster_service_ipv4_cidr (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.cluster_version (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.cluster_version (expand)" -> "[root] module.eks.time_sleep.this (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.cluster_version (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.cpu_options (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.cpu_options (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.create (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.create_iam_role (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.create_iam_role (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.create_launch_template (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.create_launch_template (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.create_schedule (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.create_schedule (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.credit_specification (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.credit_specification (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.desired_size (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.desired_size (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.disable_api_termination (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.disable_api_termination (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.disk_size (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.disk_size (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.ebs_optimized (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.ebs_optimized (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.elastic_gpu_specifications (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.elastic_gpu_specifications (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.elastic_inference_accelerator (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.elastic_inference_accelerator (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.enable_bootstrap_user_data (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.enable_bootstrap_user_data (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.enable_monitoring (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.enable_monitoring (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.enclave_options (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.enclave_options (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.force_update_version (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.force_update_version (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.iam_role_additional_policies (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.iam_role_additional_policies (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.iam_role_arn (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.iam_role_arn (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.iam_role_attach_cni_policy (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.iam_role_attach_cni_policy (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.iam_role_description (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.iam_role_description (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.iam_role_name (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.iam_role_name (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.iam_role_path (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.iam_role_path (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.iam_role_permissions_boundary (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.iam_role_permissions_boundary (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.iam_role_tags (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.iam_role_tags (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.iam_role_use_name_prefix (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.iam_role_use_name_prefix (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.instance_market_options (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.instance_market_options (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.instance_types (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.instance_types (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.kernel_id (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.kernel_id (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.key_name (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.key_name (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.labels (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.labels (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.launch_template_default_version (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.launch_template_default_version (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.launch_template_description (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.launch_template_description (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.launch_template_id (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.launch_template_id (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.launch_template_name (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.launch_template_name (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.launch_template_tags (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.launch_template_tags (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.launch_template_use_name_prefix (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.launch_template_use_name_prefix (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.launch_template_version (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.launch_template_version (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.license_specifications (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.license_specifications (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.maintenance_options (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.maintenance_options (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.max_size (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.max_size (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.metadata_options (expand)" -> "[root] module.eks.local.metadata_options (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.metadata_options (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.metadata_options (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.min_size (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.min_size (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.name (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.network_interfaces (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.network_interfaces (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.placement (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.placement (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.platform (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.platform (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.post_bootstrap_user_data (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.post_bootstrap_user_data (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.pre_bootstrap_user_data (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.pre_bootstrap_user_data (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.private_dns_name_options (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.private_dns_name_options (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.ram_disk_id (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.ram_disk_id (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.remote_access (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.remote_access (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.schedules (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.schedules (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.subnet_ids (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.subnet_ids (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.subnet_ids (expand)" -> "[root] module.eks.var.subnet_ids (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.tag_specifications (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.tag_specifications (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.tags (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.tags (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.tags (expand)" -> "[root] module.eks.var.tags (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.taints (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.taints (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.timeouts (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.timeouts (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.update_config (expand)" -> "[root] module.eks.local.default_update_config (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.update_config (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.update_config (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.update_launch_template_default_version (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.update_launch_template_default_version (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.use_custom_launch_template (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.use_custom_launch_template (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.use_name_prefix (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.use_name_prefix (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.user_data_template_path (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.user_data_template_path (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.vpc_security_group_ids (expand)" -> "[root] module.eks.local.node_security_group_id (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.vpc_security_group_ids (expand)" -> "[root] module.eks.module.eks_managed_node_group (expand)"
		"[root] module.eks.module.eks_managed_node_group.var.vpc_security_group_ids (expand)" -> "[root] module.eks.var.eks_managed_node_group_defaults (expand)"
		"[root] module.eks.module.fargate_profile (close)" -> "[root] module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional (expand)"
		"[root] module.eks.module.fargate_profile (close)" -> "[root] module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this (expand)"
		"[root] module.eks.module.fargate_profile (close)" -> "[root] module.eks.module.fargate_profile.output.fargate_profile_arn (expand)"
		"[root] module.eks.module.fargate_profile (close)" -> "[root] module.eks.module.fargate_profile.output.fargate_profile_id (expand)"
		"[root] module.eks.module.fargate_profile (close)" -> "[root] module.eks.module.fargate_profile.output.fargate_profile_pod_execution_role_arn (expand)"
		"[root] module.eks.module.fargate_profile (close)" -> "[root] module.eks.module.fargate_profile.output.fargate_profile_status (expand)"
		"[root] module.eks.module.fargate_profile (close)" -> "[root] module.eks.module.fargate_profile.output.iam_role_arn (expand)"
		"[root] module.eks.module.fargate_profile (close)" -> "[root] module.eks.module.fargate_profile.output.iam_role_name (expand)"
		"[root] module.eks.module.fargate_profile (close)" -> "[root] module.eks.module.fargate_profile.output.iam_role_unique_id (expand)"
		"[root] module.eks.module.fargate_profile (expand)" -> "[root] module.eks.local.create_outposts_local_cluster (expand)"
		"[root] module.eks.module.fargate_profile (expand)" -> "[root] module.eks.var.create (expand)"
		"[root] module.eks.module.fargate_profile (expand)" -> "[root] module.eks.var.fargate_profiles (expand)"
		"[root] module.eks.module.fargate_profile.aws_eks_fargate_profile.this (expand)" -> "[root] module.eks.module.fargate_profile.aws_iam_role.this (expand)"
		"[root] module.eks.module.fargate_profile.aws_eks_fargate_profile.this (expand)" -> "[root] module.eks.module.fargate_profile.var.cluster_name (expand)"
		"[root] module.eks.module.fargate_profile.aws_eks_fargate_profile.this (expand)" -> "[root] module.eks.module.fargate_profile.var.iam_role_arn (expand)"
		"[root] module.eks.module.fargate_profile.aws_eks_fargate_profile.this (expand)" -> "[root] module.eks.module.fargate_profile.var.selectors (expand)"
		"[root] module.eks.module.fargate_profile.aws_eks_fargate_profile.this (expand)" -> "[root] module.eks.module.fargate_profile.var.subnet_ids (expand)"
		"[root] module.eks.module.fargate_profile.aws_eks_fargate_profile.this (expand)" -> "[root] module.eks.module.fargate_profile.var.timeouts (expand)"
		"[root] module.eks.module.fargate_profile.aws_iam_role.this (expand)" -> "[root] module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy (expand)"
		"[root] module.eks.module.fargate_profile.aws_iam_role.this (expand)" -> "[root] module.eks.module.fargate_profile.local.iam_role_name (expand)"
		"[root] module.eks.module.fargate_profile.aws_iam_role.this (expand)" -> "[root] module.eks.module.fargate_profile.var.iam_role_description (expand)"
		"[root] module.eks.module.fargate_profile.aws_iam_role.this (expand)" -> "[root] module.eks.module.fargate_profile.var.iam_role_path (expand)"
		"[root] module.eks.module.fargate_profile.aws_iam_role.this (expand)" -> "[root] module.eks.module.fargate_profile.var.iam_role_permissions_boundary (expand)"
		"[root] module.eks.module.fargate_profile.aws_iam_role.this (expand)" -> "[root] module.eks.module.fargate_profile.var.iam_role_tags (expand)"
		"[root] module.eks.module.fargate_profile.aws_iam_role.this (expand)" -> "[root] module.eks.module.fargate_profile.var.iam_role_use_name_prefix (expand)"
		"[root] module.eks.module.fargate_profile.aws_iam_role.this (expand)" -> "[root] module.eks.module.fargate_profile.var.tags (expand)"
		"[root] module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional (expand)" -> "[root] module.eks.module.fargate_profile.aws_iam_role.this (expand)"
		"[root] module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional (expand)" -> "[root] module.eks.module.fargate_profile.var.iam_role_additional_policies (expand)"
		"[root] module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this (expand)" -> "[root] module.eks.module.fargate_profile.aws_iam_role.this (expand)"
		"[root] module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this (expand)" -> "[root] module.eks.module.fargate_profile.local.cni_policy (expand)"
		"[root] module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this (expand)" -> "[root] module.eks.module.fargate_profile.var.iam_role_attach_cni_policy (expand)"
		"[root] module.eks.module.fargate_profile.data.aws_caller_identity.current (expand)" -> "[root] module.eks.module.fargate_profile (expand)"
		"[root] module.eks.module.fargate_profile.data.aws_caller_identity.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy (expand)" -> "[root] module.eks.module.fargate_profile.var.create (expand)"
		"[root] module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy (expand)" -> "[root] module.eks.module.fargate_profile.var.create_iam_role (expand)"
		"[root] module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.eks.module.fargate_profile.data.aws_partition.current (expand)" -> "[root] module.eks.module.fargate_profile (expand)"
		"[root] module.eks.module.fargate_profile.data.aws_partition.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.eks.module.fargate_profile.local.cni_policy (expand)" -> "[root] module.eks.module.fargate_profile.data.aws_caller_identity.current (expand)"
		"[root] module.eks.module.fargate_profile.local.cni_policy (expand)" -> "[root] module.eks.module.fargate_profile.local.iam_role_policy_prefix (expand)"
		"[root] module.eks.module.fargate_profile.local.cni_policy (expand)" -> "[root] module.eks.module.fargate_profile.var.cluster_ip_family (expand)"
		"[root] module.eks.module.fargate_profile.local.iam_role_name (expand)" -> "[root] module.eks.module.fargate_profile.var.iam_role_name (expand)"
		"[root] module.eks.module.fargate_profile.local.iam_role_name (expand)" -> "[root] module.eks.module.fargate_profile.var.name (expand)"
		"[root] module.eks.module.fargate_profile.local.iam_role_policy_prefix (expand)" -> "[root] module.eks.module.fargate_profile.data.aws_partition.current (expand)"
		"[root] module.eks.module.fargate_profile.output.fargate_profile_arn (expand)" -> "[root] module.eks.module.fargate_profile.aws_eks_fargate_profile.this (expand)"
		"[root] module.eks.module.fargate_profile.output.fargate_profile_id (expand)" -> "[root] module.eks.module.fargate_profile.aws_eks_fargate_profile.this (expand)"
		"[root] module.eks.module.fargate_profile.output.fargate_profile_pod_execution_role_arn (expand)" -> "[root] module.eks.module.fargate_profile.aws_eks_fargate_profile.this (expand)"
		"[root] module.eks.module.fargate_profile.output.fargate_profile_status (expand)" -> "[root] module.eks.module.fargate_profile.aws_eks_fargate_profile.this (expand)"
		"[root] module.eks.module.fargate_profile.output.iam_role_arn (expand)" -> "[root] module.eks.module.fargate_profile.aws_iam_role.this (expand)"
		"[root] module.eks.module.fargate_profile.output.iam_role_arn (expand)" -> "[root] module.eks.module.fargate_profile.var.iam_role_arn (expand)"
		"[root] module.eks.module.fargate_profile.output.iam_role_name (expand)" -> "[root] module.eks.module.fargate_profile.aws_iam_role.this (expand)"
		"[root] module.eks.module.fargate_profile.output.iam_role_unique_id (expand)" -> "[root] module.eks.module.fargate_profile.aws_iam_role.this (expand)"
		"[root] module.eks.module.fargate_profile.var.cluster_ip_family (expand)" -> "[root] module.eks.module.fargate_profile (expand)"
		"[root] module.eks.module.fargate_profile.var.cluster_ip_family (expand)" -> "[root] module.eks.var.cluster_ip_family (expand)"
		"[root] module.eks.module.fargate_profile.var.cluster_name (expand)" -> "[root] module.eks.module.fargate_profile (expand)"
		"[root] module.eks.module.fargate_profile.var.cluster_name (expand)" -> "[root] module.eks.time_sleep.this (expand)"
		"[root] module.eks.module.fargate_profile.var.create (expand)" -> "[root] module.eks.module.fargate_profile (expand)"
		"[root] module.eks.module.fargate_profile.var.create_iam_role (expand)" -> "[root] module.eks.module.fargate_profile (expand)"
		"[root] module.eks.module.fargate_profile.var.create_iam_role (expand)" -> "[root] module.eks.var.fargate_profile_defaults (expand)"
		"[root] module.eks.module.fargate_profile.var.iam_role_additional_policies (expand)" -> "[root] module.eks.module.fargate_profile (expand)"
		"[root] module.eks.module.fargate_profile.var.iam_role_additional_policies (expand)" -> "[root] module.eks.var.fargate_profile_defaults (expand)"
		"[root] module.eks.module.fargate_profile.var.iam_role_arn (expand)" -> "[root] module.eks.module.fargate_profile (expand)"
		"[root] module.eks.module.fargate_profile.var.iam_role_arn (expand)" -> "[root] module.eks.var.fargate_profile_defaults (expand)"
		"[root] module.eks.module.fargate_profile.var.iam_role_attach_cni_policy (expand)" -> "[root] module.eks.module.fargate_profile (expand)"
		"[root] module.eks.module.fargate_profile.var.iam_role_attach_cni_policy (expand)" -> "[root] module.eks.var.fargate_profile_defaults (expand)"
		"[root] module.eks.module.fargate_profile.var.iam_role_description (expand)" -> "[root] module.eks.module.fargate_profile (expand)"
		"[root] module.eks.module.fargate_profile.var.iam_role_description (expand)" -> "[root] module.eks.var.fargate_profile_defaults (expand)"
		"[root] module.eks.module.fargate_profile.var.iam_role_name (expand)" -> "[root] module.eks.module.fargate_profile (expand)"
		"[root] module.eks.module.fargate_profile.var.iam_role_name (expand)" -> "[root] module.eks.var.fargate_profile_defaults (expand)"
		"[root] module.eks.module.fargate_profile.var.iam_role_path (expand)" -> "[root] module.eks.module.fargate_profile (expand)"
		"[root] module.eks.module.fargate_profile.var.iam_role_path (expand)" -> "[root] module.eks.var.fargate_profile_defaults (expand)"
		"[root] module.eks.module.fargate_profile.var.iam_role_permissions_boundary (expand)" -> "[root] module.eks.module.fargate_profile (expand)"
		"[root] module.eks.module.fargate_profile.var.iam_role_permissions_boundary (expand)" -> "[root] module.eks.var.fargate_profile_defaults (expand)"
		"[root] module.eks.module.fargate_profile.var.iam_role_tags (expand)" -> "[root] module.eks.module.fargate_profile (expand)"
		"[root] module.eks.module.fargate_profile.var.iam_role_tags (expand)" -> "[root] module.eks.var.fargate_profile_defaults (expand)"
		"[root] module.eks.module.fargate_profile.var.iam_role_use_name_prefix (expand)" -> "[root] module.eks.module.fargate_profile (expand)"
		"[root] module.eks.module.fargate_profile.var.iam_role_use_name_prefix (expand)" -> "[root] module.eks.var.fargate_profile_defaults (expand)"
		"[root] module.eks.module.fargate_profile.var.name (expand)" -> "[root] module.eks.module.fargate_profile (expand)"
		"[root] module.eks.module.fargate_profile.var.selectors (expand)" -> "[root] module.eks.module.fargate_profile (expand)"
		"[root] module.eks.module.fargate_profile.var.selectors (expand)" -> "[root] module.eks.var.fargate_profile_defaults (expand)"
		"[root] module.eks.module.fargate_profile.var.subnet_ids (expand)" -> "[root] module.eks.module.fargate_profile (expand)"
		"[root] module.eks.module.fargate_profile.var.subnet_ids (expand)" -> "[root] module.eks.var.fargate_profile_defaults (expand)"
		"[root] module.eks.module.fargate_profile.var.subnet_ids (expand)" -> "[root] module.eks.var.subnet_ids (expand)"
		"[root] module.eks.module.fargate_profile.var.tags (expand)" -> "[root] module.eks.module.fargate_profile (expand)"
		"[root] module.eks.module.fargate_profile.var.tags (expand)" -> "[root] module.eks.var.fargate_profile_defaults (expand)"
		"[root] module.eks.module.fargate_profile.var.tags (expand)" -> "[root] module.eks.var.tags (expand)"
		"[root] module.eks.module.fargate_profile.var.timeouts (expand)" -> "[root] module.eks.module.fargate_profile (expand)"
		"[root] module.eks.module.fargate_profile.var.timeouts (expand)" -> "[root] module.eks.var.fargate_profile_defaults (expand)"
		"[root] module.eks.module.kms (close)" -> "[root] module.eks.module.kms.output.aliases (expand)"
		"[root] module.eks.module.kms (close)" -> "[root] module.eks.module.kms.output.external_key_expiration_model (expand)"
		"[root] module.eks.module.kms (close)" -> "[root] module.eks.module.kms.output.external_key_state (expand)"
		"[root] module.eks.module.kms (close)" -> "[root] module.eks.module.kms.output.external_key_usage (expand)"
		"[root] module.eks.module.kms (close)" -> "[root] module.eks.module.kms.output.grants (expand)"
		"[root] module.eks.module.kms (close)" -> "[root] module.eks.module.kms.output.key_arn (expand)"
		"[root] module.eks.module.kms (close)" -> "[root] module.eks.module.kms.output.key_id (expand)"
		"[root] module.eks.module.kms (close)" -> "[root] module.eks.module.kms.output.key_policy (expand)"
		"[root] module.eks.module.kms (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.module.kms.aws_kms_alias.this (expand)" -> "[root] module.eks.module.kms.aws_kms_external_key.this (expand)"
		"[root] module.eks.module.kms.aws_kms_alias.this (expand)" -> "[root] module.eks.module.kms.aws_kms_key.this (expand)"
		"[root] module.eks.module.kms.aws_kms_alias.this (expand)" -> "[root] module.eks.module.kms.local.aliases (expand)"
		"[root] module.eks.module.kms.aws_kms_alias.this (expand)" -> "[root] module.eks.module.kms.var.aliases_use_name_prefix (expand)"
		"[root] module.eks.module.kms.aws_kms_alias.this (expand)" -> "[root] module.eks.module.kms.var.computed_aliases (expand)"
		"[root] module.eks.module.kms.aws_kms_external_key.this (expand)" -> "[root] module.eks.module.kms.data.aws_iam_policy_document.this (expand)"
		"[root] module.eks.module.kms.aws_kms_external_key.this (expand)" -> "[root] module.eks.module.kms.var.bypass_policy_lockout_safety_check (expand)"
		"[root] module.eks.module.kms.aws_kms_external_key.this (expand)" -> "[root] module.eks.module.kms.var.create_external (expand)"
		"[root] module.eks.module.kms.aws_kms_external_key.this (expand)" -> "[root] module.eks.module.kms.var.deletion_window_in_days (expand)"
		"[root] module.eks.module.kms.aws_kms_external_key.this (expand)" -> "[root] module.eks.module.kms.var.description (expand)"
		"[root] module.eks.module.kms.aws_kms_external_key.this (expand)" -> "[root] module.eks.module.kms.var.is_enabled (expand)"
		"[root] module.eks.module.kms.aws_kms_external_key.this (expand)" -> "[root] module.eks.module.kms.var.key_material_base64 (expand)"
		"[root] module.eks.module.kms.aws_kms_external_key.this (expand)" -> "[root] module.eks.module.kms.var.multi_region (expand)"
		"[root] module.eks.module.kms.aws_kms_external_key.this (expand)" -> "[root] module.eks.module.kms.var.policy (expand)"
		"[root] module.eks.module.kms.aws_kms_external_key.this (expand)" -> "[root] module.eks.module.kms.var.tags (expand)"
		"[root] module.eks.module.kms.aws_kms_external_key.this (expand)" -> "[root] module.eks.module.kms.var.valid_to (expand)"
		"[root] module.eks.module.kms.aws_kms_grant.this (expand)" -> "[root] module.eks.module.kms.aws_kms_external_key.this (expand)"
		"[root] module.eks.module.kms.aws_kms_grant.this (expand)" -> "[root] module.eks.module.kms.aws_kms_key.this (expand)"
		"[root] module.eks.module.kms.aws_kms_grant.this (expand)" -> "[root] module.eks.module.kms.var.grants (expand)"
		"[root] module.eks.module.kms.aws_kms_key.this (expand)" -> "[root] module.eks.module.kms.data.aws_iam_policy_document.this (expand)"
		"[root] module.eks.module.kms.aws_kms_key.this (expand)" -> "[root] module.eks.module.kms.var.bypass_policy_lockout_safety_check (expand)"
		"[root] module.eks.module.kms.aws_kms_key.this (expand)" -> "[root] module.eks.module.kms.var.create_external (expand)"
		"[root] module.eks.module.kms.aws_kms_key.this (expand)" -> "[root] module.eks.module.kms.var.customer_master_key_spec (expand)"
		"[root] module.eks.module.kms.aws_kms_key.this (expand)" -> "[root] module.eks.module.kms.var.deletion_window_in_days (expand)"
		"[root] module.eks.module.kms.aws_kms_key.this (expand)" -> "[root] module.eks.module.kms.var.description (expand)"
		"[root] module.eks.module.kms.aws_kms_key.this (expand)" -> "[root] module.eks.module.kms.var.enable_key_rotation (expand)"
		"[root] module.eks.module.kms.aws_kms_key.this (expand)" -> "[root] module.eks.module.kms.var.is_enabled (expand)"
		"[root] module.eks.module.kms.aws_kms_key.this (expand)" -> "[root] module.eks.module.kms.var.key_usage (expand)"
		"[root] module.eks.module.kms.aws_kms_key.this (expand)" -> "[root] module.eks.module.kms.var.multi_region (expand)"
		"[root] module.eks.module.kms.aws_kms_key.this (expand)" -> "[root] module.eks.module.kms.var.policy (expand)"
		"[root] module.eks.module.kms.aws_kms_key.this (expand)" -> "[root] module.eks.module.kms.var.tags (expand)"
		"[root] module.eks.module.kms.data.aws_caller_identity.current (expand)" -> "[root] module.eks.module.kms (expand)"
		"[root] module.eks.module.kms.data.aws_caller_identity.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.eks.module.kms.data.aws_iam_policy_document.this (expand)" -> "[root] module.eks.module.kms.data.aws_caller_identity.current (expand)"
		"[root] module.eks.module.kms.data.aws_iam_policy_document.this (expand)" -> "[root] module.eks.module.kms.data.aws_partition.current (expand)"
		"[root] module.eks.module.kms.data.aws_iam_policy_document.this (expand)" -> "[root] module.eks.module.kms.var.create (expand)"
		"[root] module.eks.module.kms.data.aws_iam_policy_document.this (expand)" -> "[root] module.eks.module.kms.var.enable_default_policy (expand)"
		"[root] module.eks.module.kms.data.aws_iam_policy_document.this (expand)" -> "[root] module.eks.module.kms.var.key_administrators (expand)"
		"[root] module.eks.module.kms.data.aws_iam_policy_document.this (expand)" -> "[root] module.eks.module.kms.var.key_asymmetric_public_encryption_users (expand)"
		"[root] module.eks.module.kms.data.aws_iam_policy_document.this (expand)" -> "[root] module.eks.module.kms.var.key_asymmetric_sign_verify_users (expand)"
		"[root] module.eks.module.kms.data.aws_iam_policy_document.this (expand)" -> "[root] module.eks.module.kms.var.key_hmac_users (expand)"
		"[root] module.eks.module.kms.data.aws_iam_policy_document.this (expand)" -> "[root] module.eks.module.kms.var.key_owners (expand)"
		"[root] module.eks.module.kms.data.aws_iam_policy_document.this (expand)" -> "[root] module.eks.module.kms.var.key_service_users (expand)"
		"[root] module.eks.module.kms.data.aws_iam_policy_document.this (expand)" -> "[root] module.eks.module.kms.var.key_symmetric_encryption_users (expand)"
		"[root] module.eks.module.kms.data.aws_iam_policy_document.this (expand)" -> "[root] module.eks.module.kms.var.key_users (expand)"
		"[root] module.eks.module.kms.data.aws_iam_policy_document.this (expand)" -> "[root] module.eks.module.kms.var.override_policy_documents (expand)"
		"[root] module.eks.module.kms.data.aws_iam_policy_document.this (expand)" -> "[root] module.eks.module.kms.var.source_policy_documents (expand)"
		"[root] module.eks.module.kms.data.aws_partition.current (expand)" -> "[root] module.eks.module.kms (expand)"
		"[root] module.eks.module.kms.data.aws_partition.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.eks.module.kms.local.aliases (expand)" -> "[root] module.eks.module.kms.var.aliases (expand)"
		"[root] module.eks.module.kms.output.aliases (expand)" -> "[root] module.eks.module.kms.aws_kms_alias.this (expand)"
		"[root] module.eks.module.kms.output.external_key_expiration_model (expand)" -> "[root] module.eks.module.kms.aws_kms_external_key.this (expand)"
		"[root] module.eks.module.kms.output.external_key_state (expand)" -> "[root] module.eks.module.kms.aws_kms_external_key.this (expand)"
		"[root] module.eks.module.kms.output.external_key_usage (expand)" -> "[root] module.eks.module.kms.aws_kms_external_key.this (expand)"
		"[root] module.eks.module.kms.output.grants (expand)" -> "[root] module.eks.module.kms.aws_kms_grant.this (expand)"
		"[root] module.eks.module.kms.output.key_arn (expand)" -> "[root] module.eks.module.kms.aws_kms_external_key.this (expand)"
		"[root] module.eks.module.kms.output.key_arn (expand)" -> "[root] module.eks.module.kms.aws_kms_key.this (expand)"
		"[root] module.eks.module.kms.output.key_id (expand)" -> "[root] module.eks.module.kms.aws_kms_external_key.this (expand)"
		"[root] module.eks.module.kms.output.key_id (expand)" -> "[root] module.eks.module.kms.aws_kms_key.this (expand)"
		"[root] module.eks.module.kms.output.key_policy (expand)" -> "[root] module.eks.module.kms.aws_kms_external_key.this (expand)"
		"[root] module.eks.module.kms.output.key_policy (expand)" -> "[root] module.eks.module.kms.aws_kms_key.this (expand)"
		"[root] module.eks.module.kms.var.aliases (expand)" -> "[root] module.eks.module.kms (expand)"
		"[root] module.eks.module.kms.var.aliases (expand)" -> "[root] module.eks.var.kms_key_aliases (expand)"
		"[root] module.eks.module.kms.var.aliases_use_name_prefix (expand)" -> "[root] module.eks.module.kms (expand)"
		"[root] module.eks.module.kms.var.bypass_policy_lockout_safety_check (expand)" -> "[root] module.eks.module.kms (expand)"
		"[root] module.eks.module.kms.var.computed_aliases (expand)" -> "[root] module.eks.module.kms (expand)"
		"[root] module.eks.module.kms.var.computed_aliases (expand)" -> "[root] module.eks.var.cluster_name (expand)"
		"[root] module.eks.module.kms.var.create (expand)" -> "[root] module.eks.local.create (expand)"
		"[root] module.eks.module.kms.var.create (expand)" -> "[root] module.eks.local.enable_cluster_encryption_config (expand)"
		"[root] module.eks.module.kms.var.create (expand)" -> "[root] module.eks.module.kms (expand)"
		"[root] module.eks.module.kms.var.create (expand)" -> "[root] module.eks.var.create_kms_key (expand)"
		"[root] module.eks.module.kms.var.create_external (expand)" -> "[root] module.eks.module.kms (expand)"
		"[root] module.eks.module.kms.var.customer_master_key_spec (expand)" -> "[root] module.eks.module.kms (expand)"
		"[root] module.eks.module.kms.var.deletion_window_in_days (expand)" -> "[root] module.eks.module.kms (expand)"
		"[root] module.eks.module.kms.var.deletion_window_in_days (expand)" -> "[root] module.eks.var.kms_key_deletion_window_in_days (expand)"
		"[root] module.eks.module.kms.var.description (expand)" -> "[root] module.eks.module.kms (expand)"
		"[root] module.eks.module.kms.var.description (expand)" -> "[root] module.eks.var.cluster_name (expand)"
		"[root] module.eks.module.kms.var.description (expand)" -> "[root] module.eks.var.kms_key_description (expand)"
		"[root] module.eks.module.kms.var.enable_default_policy (expand)" -> "[root] module.eks.module.kms (expand)"
		"[root] module.eks.module.kms.var.enable_default_policy (expand)" -> "[root] module.eks.var.kms_key_enable_default_policy (expand)"
		"[root] module.eks.module.kms.var.enable_key_rotation (expand)" -> "[root] module.eks.module.kms (expand)"
		"[root] module.eks.module.kms.var.enable_key_rotation (expand)" -> "[root] module.eks.var.enable_kms_key_rotation (expand)"
		"[root] module.eks.module.kms.var.grants (expand)" -> "[root] module.eks.module.kms (expand)"
		"[root] module.eks.module.kms.var.is_enabled (expand)" -> "[root] module.eks.module.kms (expand)"
		"[root] module.eks.module.kms.var.key_administrators (expand)" -> "[root] module.eks.data.aws_iam_session_context.current (expand)"
		"[root] module.eks.module.kms.var.key_administrators (expand)" -> "[root] module.eks.module.kms (expand)"
		"[root] module.eks.module.kms.var.key_administrators (expand)" -> "[root] module.eks.var.kms_key_administrators (expand)"
		"[root] module.eks.module.kms.var.key_asymmetric_public_encryption_users (expand)" -> "[root] module.eks.module.kms (expand)"
		"[root] module.eks.module.kms.var.key_asymmetric_sign_verify_users (expand)" -> "[root] module.eks.module.kms (expand)"
		"[root] module.eks.module.kms.var.key_hmac_users (expand)" -> "[root] module.eks.module.kms (expand)"
		"[root] module.eks.module.kms.var.key_material_base64 (expand)" -> "[root] module.eks.module.kms (expand)"
		"[root] module.eks.module.kms.var.key_owners (expand)" -> "[root] module.eks.module.kms (expand)"
		"[root] module.eks.module.kms.var.key_owners (expand)" -> "[root] module.eks.var.kms_key_owners (expand)"
		"[root] module.eks.module.kms.var.key_service_users (expand)" -> "[root] module.eks.module.kms (expand)"
		"[root] module.eks.module.kms.var.key_service_users (expand)" -> "[root] module.eks.var.kms_key_service_users (expand)"
		"[root] module.eks.module.kms.var.key_symmetric_encryption_users (expand)" -> "[root] module.eks.module.kms (expand)"
		"[root] module.eks.module.kms.var.key_usage (expand)" -> "[root] module.eks.module.kms (expand)"
		"[root] module.eks.module.kms.var.key_users (expand)" -> "[root] module.eks.local.cluster_role (expand)"
		"[root] module.eks.module.kms.var.key_users (expand)" -> "[root] module.eks.module.kms (expand)"
		"[root] module.eks.module.kms.var.key_users (expand)" -> "[root] module.eks.var.kms_key_users (expand)"
		"[root] module.eks.module.kms.var.multi_region (expand)" -> "[root] module.eks.module.kms (expand)"
		"[root] module.eks.module.kms.var.override_policy_documents (expand)" -> "[root] module.eks.module.kms (expand)"
		"[root] module.eks.module.kms.var.override_policy_documents (expand)" -> "[root] module.eks.var.kms_key_override_policy_documents (expand)"
		"[root] module.eks.module.kms.var.policy (expand)" -> "[root] module.eks.module.kms (expand)"
		"[root] module.eks.module.kms.var.source_policy_documents (expand)" -> "[root] module.eks.module.kms (expand)"
		"[root] module.eks.module.kms.var.source_policy_documents (expand)" -> "[root] module.eks.var.kms_key_source_policy_documents (expand)"
		"[root] module.eks.module.kms.var.tags (expand)" -> "[root] module.eks.module.kms (expand)"
		"[root] module.eks.module.kms.var.tags (expand)" -> "[root] module.eks.var.tags (expand)"
		"[root] module.eks.module.kms.var.valid_to (expand)" -> "[root] module.eks.module.kms (expand)"
		"[root] module.eks.module.self_managed_node_group (close)" -> "[root] module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional (expand)"
		"[root] module.eks.module.self_managed_node_group (close)" -> "[root] module.eks.module.self_managed_node_group.module.user_data (close)"
		"[root] module.eks.module.self_managed_node_group (close)" -> "[root] module.eks.module.self_managed_node_group.output.autoscaling_group_arn (expand)"
		"[root] module.eks.module.self_managed_node_group (close)" -> "[root] module.eks.module.self_managed_node_group.output.autoscaling_group_availability_zones (expand)"
		"[root] module.eks.module.self_managed_node_group (close)" -> "[root] module.eks.module.self_managed_node_group.output.autoscaling_group_default_cooldown (expand)"
		"[root] module.eks.module.self_managed_node_group (close)" -> "[root] module.eks.module.self_managed_node_group.output.autoscaling_group_desired_capacity (expand)"
		"[root] module.eks.module.self_managed_node_group (close)" -> "[root] module.eks.module.self_managed_node_group.output.autoscaling_group_health_check_grace_period (expand)"
		"[root] module.eks.module.self_managed_node_group (close)" -> "[root] module.eks.module.self_managed_node_group.output.autoscaling_group_health_check_type (expand)"
		"[root] module.eks.module.self_managed_node_group (close)" -> "[root] module.eks.module.self_managed_node_group.output.autoscaling_group_id (expand)"
		"[root] module.eks.module.self_managed_node_group (close)" -> "[root] module.eks.module.self_managed_node_group.output.autoscaling_group_max_size (expand)"
		"[root] module.eks.module.self_managed_node_group (close)" -> "[root] module.eks.module.self_managed_node_group.output.autoscaling_group_min_size (expand)"
		"[root] module.eks.module.self_managed_node_group (close)" -> "[root] module.eks.module.self_managed_node_group.output.autoscaling_group_name (expand)"
		"[root] module.eks.module.self_managed_node_group (close)" -> "[root] module.eks.module.self_managed_node_group.output.autoscaling_group_schedule_arns (expand)"
		"[root] module.eks.module.self_managed_node_group (close)" -> "[root] module.eks.module.self_managed_node_group.output.autoscaling_group_vpc_zone_identifier (expand)"
		"[root] module.eks.module.self_managed_node_group (close)" -> "[root] module.eks.module.self_managed_node_group.output.iam_instance_profile_arn (expand)"
		"[root] module.eks.module.self_managed_node_group (close)" -> "[root] module.eks.module.self_managed_node_group.output.iam_instance_profile_id (expand)"
		"[root] module.eks.module.self_managed_node_group (close)" -> "[root] module.eks.module.self_managed_node_group.output.iam_instance_profile_unique (expand)"
		"[root] module.eks.module.self_managed_node_group (close)" -> "[root] module.eks.module.self_managed_node_group.output.iam_role_arn (expand)"
		"[root] module.eks.module.self_managed_node_group (close)" -> "[root] module.eks.module.self_managed_node_group.output.iam_role_name (expand)"
		"[root] module.eks.module.self_managed_node_group (close)" -> "[root] module.eks.module.self_managed_node_group.output.iam_role_unique_id (expand)"
		"[root] module.eks.module.self_managed_node_group (close)" -> "[root] module.eks.module.self_managed_node_group.output.image_id (expand)"
		"[root] module.eks.module.self_managed_node_group (close)" -> "[root] module.eks.module.self_managed_node_group.output.launch_template_arn (expand)"
		"[root] module.eks.module.self_managed_node_group (close)" -> "[root] module.eks.module.self_managed_node_group.output.launch_template_id (expand)"
		"[root] module.eks.module.self_managed_node_group (close)" -> "[root] module.eks.module.self_managed_node_group.output.launch_template_latest_version (expand)"
		"[root] module.eks.module.self_managed_node_group (close)" -> "[root] module.eks.module.self_managed_node_group.output.launch_template_name (expand)"
		"[root] module.eks.module.self_managed_node_group (close)" -> "[root] module.eks.module.self_managed_node_group.output.platform (expand)"
		"[root] module.eks.module.self_managed_node_group (close)" -> "[root] module.eks.module.self_managed_node_group.output.user_data (expand)"
		"[root] module.eks.module.self_managed_node_group (expand)" -> "[root] module.eks.var.create (expand)"
		"[root] module.eks.module.self_managed_node_group (expand)" -> "[root] module.eks.var.self_managed_node_groups (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.local.launch_template_id (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.local.launch_template_version (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.autoscaling_group_tags (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.availability_zones (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.capacity_rebalance (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.context (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.create_autoscaling_group (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.default_cooldown (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.default_instance_warmup (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.delete_timeout (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.desired_size (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.enabled_metrics (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.force_delete (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.force_delete_warm_pool (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.health_check_grace_period (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.health_check_type (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.initial_lifecycle_hooks (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.instance_refresh (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.max_instance_lifetime (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.max_size (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.metrics_granularity (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.min_elb_capacity (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.min_size (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.mixed_instances_policy (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.placement_group (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.protect_from_scale_in (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.service_linked_role_arn (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.subnet_ids (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.suspended_processes (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.target_group_arns (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.termination_policies (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.use_mixed_instances_policy (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.use_name_prefix (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.wait_for_capacity_timeout (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.wait_for_elb_capacity (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.warm_pool (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this (expand)" -> "[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.create_schedule (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.schedules (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_iam_instance_profile.this (expand)" -> "[root] module.eks.module.self_managed_node_group.aws_iam_role.this (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_iam_role.this (expand)" -> "[root] module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_iam_role.this (expand)" -> "[root] module.eks.module.self_managed_node_group.local.iam_role_name (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_iam_role.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.iam_role_description (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_iam_role.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.iam_role_path (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_iam_role.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.iam_role_permissions_boundary (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_iam_role.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.iam_role_tags (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_iam_role.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.iam_role_use_name_prefix (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_iam_role.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.tags (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional (expand)" -> "[root] module.eks.module.self_managed_node_group.aws_iam_role.this (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional (expand)" -> "[root] module.eks.module.self_managed_node_group.var.iam_role_additional_policies (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this (expand)" -> "[root] module.eks.module.self_managed_node_group.aws_iam_role.this (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this (expand)" -> "[root] module.eks.module.self_managed_node_group.local.cni_policy (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.iam_role_attach_cni_policy (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.aws_iam_instance_profile.this (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.data.aws_ami.eks_default (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.local.launch_template_name (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.local.security_group_ids (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data.output.user_data (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.ami_id (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.block_device_mappings (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.capacity_reservation_specification (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.cpu_options (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.credit_specification (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.disable_api_termination (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.ebs_optimized (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.elastic_gpu_specifications (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.elastic_inference_accelerator (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.enable_monitoring (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.enclave_options (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.hibernation_options (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.iam_instance_profile_arn (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.instance_initiated_shutdown_behavior (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.instance_market_options (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.instance_requirements (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.instance_type (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.kernel_id (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.key_name (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.launch_template_default_version (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.launch_template_description (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.launch_template_tags (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.launch_template_use_name_prefix (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.license_specifications (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.maintenance_options (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.metadata_options (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.network_interfaces (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.placement (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.private_dns_name_options (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.ram_disk_id (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.tag_specifications (expand)"
		"[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)" -> "[root] module.eks.module.self_managed_node_group.var.update_launch_template_default_version (expand)"
		"[root] module.eks.module.self_managed_node_group.data.aws_ami.eks_default (expand)" -> "[root] module.eks.module.self_managed_node_group.var.cluster_version (expand)"
		"[root] module.eks.module.self_managed_node_group.data.aws_ami.eks_default (expand)" -> "[root] module.eks.module.self_managed_node_group.var.create (expand)"
		"[root] module.eks.module.self_managed_node_group.data.aws_ami.eks_default (expand)" -> "[root] module.eks.module.self_managed_node_group.var.create_launch_template (expand)"
		"[root] module.eks.module.self_managed_node_group.data.aws_caller_identity.current (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.data.aws_caller_identity.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy (expand)" -> "[root] module.eks.module.self_managed_node_group.data.aws_partition.current (expand)"
		"[root] module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy (expand)" -> "[root] module.eks.module.self_managed_node_group.var.create (expand)"
		"[root] module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy (expand)" -> "[root] module.eks.module.self_managed_node_group.var.create_iam_instance_profile (expand)"
		"[root] module.eks.module.self_managed_node_group.data.aws_partition.current (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.data.aws_partition.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.eks.module.self_managed_node_group.local.cni_policy (expand)" -> "[root] module.eks.module.self_managed_node_group.data.aws_caller_identity.current (expand)"
		"[root] module.eks.module.self_managed_node_group.local.cni_policy (expand)" -> "[root] module.eks.module.self_managed_node_group.local.iam_role_policy_prefix (expand)"
		"[root] module.eks.module.self_managed_node_group.local.cni_policy (expand)" -> "[root] module.eks.module.self_managed_node_group.var.cluster_ip_family (expand)"
		"[root] module.eks.module.self_managed_node_group.local.iam_role_name (expand)" -> "[root] module.eks.module.self_managed_node_group.var.iam_role_name (expand)"
		"[root] module.eks.module.self_managed_node_group.local.iam_role_name (expand)" -> "[root] module.eks.module.self_managed_node_group.var.name (expand)"
		"[root] module.eks.module.self_managed_node_group.local.iam_role_policy_prefix (expand)" -> "[root] module.eks.module.self_managed_node_group.data.aws_partition.current (expand)"
		"[root] module.eks.module.self_managed_node_group.local.launch_template_id (expand)" -> "[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)"
		"[root] module.eks.module.self_managed_node_group.local.launch_template_id (expand)" -> "[root] module.eks.module.self_managed_node_group.var.launch_template_id (expand)"
		"[root] module.eks.module.self_managed_node_group.local.launch_template_name (expand)" -> "[root] module.eks.module.self_managed_node_group.var.launch_template_name (expand)"
		"[root] module.eks.module.self_managed_node_group.local.launch_template_name (expand)" -> "[root] module.eks.module.self_managed_node_group.var.name (expand)"
		"[root] module.eks.module.self_managed_node_group.local.launch_template_version (expand)" -> "[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)"
		"[root] module.eks.module.self_managed_node_group.local.launch_template_version (expand)" -> "[root] module.eks.module.self_managed_node_group.var.launch_template_version (expand)"
		"[root] module.eks.module.self_managed_node_group.local.security_group_ids (expand)" -> "[root] module.eks.module.self_managed_node_group.var.cluster_primary_security_group_id (expand)"
		"[root] module.eks.module.self_managed_node_group.local.security_group_ids (expand)" -> "[root] module.eks.module.self_managed_node_group.var.vpc_security_group_ids (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data (close)" -> "[root] module.eks.module.self_managed_node_group.module.user_data.output.user_data (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data.var.create (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data.var.enable_bootstrap_user_data (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data.var.is_eks_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data.var.platform (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data.var.pre_bootstrap_user_data (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data.var.user_data_template_path (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/cloudinit\"]"
		"[root] module.eks.module.self_managed_node_group.module.user_data.local.int_linux_default_user_data (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data.var.bootstrap_extra_args (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.local.int_linux_default_user_data (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data.var.cluster_auth_base64 (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.local.int_linux_default_user_data (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data.var.cluster_endpoint (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.local.int_linux_default_user_data (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data.var.cluster_name (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.local.int_linux_default_user_data (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data.var.cluster_service_ipv4_cidr (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.local.int_linux_default_user_data (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data.var.create (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.local.int_linux_default_user_data (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data.var.enable_bootstrap_user_data (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.local.int_linux_default_user_data (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data.var.platform (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.local.int_linux_default_user_data (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data.var.post_bootstrap_user_data (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.local.int_linux_default_user_data (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data.var.pre_bootstrap_user_data (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.local.int_linux_default_user_data (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data.var.user_data_template_path (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.local.platform (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.local.platform (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data.local.int_linux_default_user_data (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.output.user_data (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data.local.platform (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.var.bootstrap_extra_args (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.var.bootstrap_extra_args (expand)" -> "[root] module.eks.module.self_managed_node_group.var.bootstrap_extra_args (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.var.cluster_auth_base64 (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.var.cluster_auth_base64 (expand)" -> "[root] module.eks.module.self_managed_node_group.var.cluster_auth_base64 (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.var.cluster_endpoint (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.var.cluster_endpoint (expand)" -> "[root] module.eks.module.self_managed_node_group.var.cluster_endpoint (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.var.cluster_name (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.var.cluster_name (expand)" -> "[root] module.eks.module.self_managed_node_group.var.cluster_name (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.var.cluster_service_ipv4_cidr (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.var.create (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.var.create (expand)" -> "[root] module.eks.module.self_managed_node_group.var.create (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.var.enable_bootstrap_user_data (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.var.is_eks_managed_node_group (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.var.platform (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.var.platform (expand)" -> "[root] module.eks.module.self_managed_node_group.var.platform (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.var.post_bootstrap_user_data (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.var.post_bootstrap_user_data (expand)" -> "[root] module.eks.module.self_managed_node_group.var.post_bootstrap_user_data (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.var.pre_bootstrap_user_data (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.var.pre_bootstrap_user_data (expand)" -> "[root] module.eks.module.self_managed_node_group.var.pre_bootstrap_user_data (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.var.user_data_template_path (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data (expand)"
		"[root] module.eks.module.self_managed_node_group.module.user_data.var.user_data_template_path (expand)" -> "[root] module.eks.module.self_managed_node_group.var.user_data_template_path (expand)"
		"[root] module.eks.module.self_managed_node_group.output.autoscaling_group_arn (expand)" -> "[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)"
		"[root] module.eks.module.self_managed_node_group.output.autoscaling_group_availability_zones (expand)" -> "[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)"
		"[root] module.eks.module.self_managed_node_group.output.autoscaling_group_default_cooldown (expand)" -> "[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)"
		"[root] module.eks.module.self_managed_node_group.output.autoscaling_group_desired_capacity (expand)" -> "[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)"
		"[root] module.eks.module.self_managed_node_group.output.autoscaling_group_health_check_grace_period (expand)" -> "[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)"
		"[root] module.eks.module.self_managed_node_group.output.autoscaling_group_health_check_type (expand)" -> "[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)"
		"[root] module.eks.module.self_managed_node_group.output.autoscaling_group_id (expand)" -> "[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)"
		"[root] module.eks.module.self_managed_node_group.output.autoscaling_group_max_size (expand)" -> "[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)"
		"[root] module.eks.module.self_managed_node_group.output.autoscaling_group_min_size (expand)" -> "[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)"
		"[root] module.eks.module.self_managed_node_group.output.autoscaling_group_name (expand)" -> "[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)"
		"[root] module.eks.module.self_managed_node_group.output.autoscaling_group_schedule_arns (expand)" -> "[root] module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this (expand)"
		"[root] module.eks.module.self_managed_node_group.output.autoscaling_group_vpc_zone_identifier (expand)" -> "[root] module.eks.module.self_managed_node_group.aws_autoscaling_group.this (expand)"
		"[root] module.eks.module.self_managed_node_group.output.iam_instance_profile_arn (expand)" -> "[root] module.eks.module.self_managed_node_group.aws_iam_instance_profile.this (expand)"
		"[root] module.eks.module.self_managed_node_group.output.iam_instance_profile_arn (expand)" -> "[root] module.eks.module.self_managed_node_group.var.iam_instance_profile_arn (expand)"
		"[root] module.eks.module.self_managed_node_group.output.iam_instance_profile_id (expand)" -> "[root] module.eks.module.self_managed_node_group.aws_iam_instance_profile.this (expand)"
		"[root] module.eks.module.self_managed_node_group.output.iam_instance_profile_unique (expand)" -> "[root] module.eks.module.self_managed_node_group.aws_iam_instance_profile.this (expand)"
		"[root] module.eks.module.self_managed_node_group.output.iam_role_arn (expand)" -> "[root] module.eks.module.self_managed_node_group.aws_iam_role.this (expand)"
		"[root] module.eks.module.self_managed_node_group.output.iam_role_name (expand)" -> "[root] module.eks.module.self_managed_node_group.aws_iam_role.this (expand)"
		"[root] module.eks.module.self_managed_node_group.output.iam_role_unique_id (expand)" -> "[root] module.eks.module.self_managed_node_group.aws_iam_role.this (expand)"
		"[root] module.eks.module.self_managed_node_group.output.image_id (expand)" -> "[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)"
		"[root] module.eks.module.self_managed_node_group.output.launch_template_arn (expand)" -> "[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)"
		"[root] module.eks.module.self_managed_node_group.output.launch_template_id (expand)" -> "[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)"
		"[root] module.eks.module.self_managed_node_group.output.launch_template_latest_version (expand)" -> "[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)"
		"[root] module.eks.module.self_managed_node_group.output.launch_template_name (expand)" -> "[root] module.eks.module.self_managed_node_group.aws_launch_template.this (expand)"
		"[root] module.eks.module.self_managed_node_group.output.platform (expand)" -> "[root] module.eks.module.self_managed_node_group.var.platform (expand)"
		"[root] module.eks.module.self_managed_node_group.output.user_data (expand)" -> "[root] module.eks.module.self_managed_node_group.module.user_data.output.user_data (expand)"
		"[root] module.eks.module.self_managed_node_group.var.ami_id (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.ami_id (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.autoscaling_group_tags (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.autoscaling_group_tags (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.availability_zones (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.availability_zones (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.block_device_mappings (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.block_device_mappings (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.bootstrap_extra_args (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.bootstrap_extra_args (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.capacity_rebalance (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.capacity_rebalance (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.capacity_reservation_specification (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.capacity_reservation_specification (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.cluster_auth_base64 (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.cluster_auth_base64 (expand)" -> "[root] module.eks.time_sleep.this (expand)"
		"[root] module.eks.module.self_managed_node_group.var.cluster_endpoint (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.cluster_endpoint (expand)" -> "[root] module.eks.time_sleep.this (expand)"
		"[root] module.eks.module.self_managed_node_group.var.cluster_ip_family (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.cluster_ip_family (expand)" -> "[root] module.eks.var.cluster_ip_family (expand)"
		"[root] module.eks.module.self_managed_node_group.var.cluster_name (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.cluster_name (expand)" -> "[root] module.eks.time_sleep.this (expand)"
		"[root] module.eks.module.self_managed_node_group.var.cluster_primary_security_group_id (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.module.self_managed_node_group.var.cluster_primary_security_group_id (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.cluster_primary_security_group_id (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.cluster_version (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.cluster_version (expand)" -> "[root] module.eks.time_sleep.this (expand)"
		"[root] module.eks.module.self_managed_node_group.var.cluster_version (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.context (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.context (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.cpu_options (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.cpu_options (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.create (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.create_autoscaling_group (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.create_autoscaling_group (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.create_iam_instance_profile (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.create_iam_instance_profile (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.create_launch_template (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.create_launch_template (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.create_schedule (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.create_schedule (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.credit_specification (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.credit_specification (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.default_cooldown (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.default_cooldown (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.default_instance_warmup (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.default_instance_warmup (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.delete_timeout (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.delete_timeout (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.desired_size (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.desired_size (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.disable_api_termination (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.disable_api_termination (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.ebs_optimized (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.ebs_optimized (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.elastic_gpu_specifications (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.elastic_gpu_specifications (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.elastic_inference_accelerator (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.elastic_inference_accelerator (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.enable_monitoring (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.enable_monitoring (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.enabled_metrics (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.enabled_metrics (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.enclave_options (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.enclave_options (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.force_delete (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.force_delete (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.force_delete_warm_pool (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.force_delete_warm_pool (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.health_check_grace_period (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.health_check_grace_period (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.health_check_type (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.health_check_type (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.hibernation_options (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.hibernation_options (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.iam_instance_profile_arn (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.iam_instance_profile_arn (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.iam_role_additional_policies (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.iam_role_additional_policies (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.iam_role_attach_cni_policy (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.iam_role_attach_cni_policy (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.iam_role_description (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.iam_role_description (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.iam_role_name (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.iam_role_name (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.iam_role_path (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.iam_role_path (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.iam_role_permissions_boundary (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.iam_role_permissions_boundary (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.iam_role_tags (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.iam_role_tags (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.iam_role_use_name_prefix (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.iam_role_use_name_prefix (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.initial_lifecycle_hooks (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.initial_lifecycle_hooks (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.instance_initiated_shutdown_behavior (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.instance_initiated_shutdown_behavior (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.instance_market_options (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.instance_market_options (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.instance_refresh (expand)" -> "[root] module.eks.local.default_instance_refresh (expand)"
		"[root] module.eks.module.self_managed_node_group.var.instance_refresh (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.instance_refresh (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.instance_requirements (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.instance_requirements (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.instance_type (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.instance_type (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.kernel_id (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.kernel_id (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.key_name (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.key_name (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.launch_template_default_version (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.launch_template_default_version (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.launch_template_description (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.launch_template_description (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.launch_template_id (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.launch_template_id (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.launch_template_name (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.launch_template_name (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.launch_template_tags (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.launch_template_tags (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.launch_template_use_name_prefix (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.launch_template_use_name_prefix (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.launch_template_version (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.launch_template_version (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.license_specifications (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.license_specifications (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.maintenance_options (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.maintenance_options (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.max_instance_lifetime (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.max_instance_lifetime (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.max_size (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.max_size (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.metadata_options (expand)" -> "[root] module.eks.local.metadata_options (expand)"
		"[root] module.eks.module.self_managed_node_group.var.metadata_options (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.metadata_options (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.metrics_granularity (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.metrics_granularity (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.min_elb_capacity (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.min_elb_capacity (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.min_size (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.min_size (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.mixed_instances_policy (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.mixed_instances_policy (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.name (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.network_interfaces (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.network_interfaces (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.placement (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.placement (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.placement_group (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.placement_group (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.platform (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.platform (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.post_bootstrap_user_data (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.post_bootstrap_user_data (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.pre_bootstrap_user_data (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.pre_bootstrap_user_data (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.private_dns_name_options (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.private_dns_name_options (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.protect_from_scale_in (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.protect_from_scale_in (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.ram_disk_id (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.ram_disk_id (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.schedules (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.schedules (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.service_linked_role_arn (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.service_linked_role_arn (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.subnet_ids (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.subnet_ids (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.subnet_ids (expand)" -> "[root] module.eks.var.subnet_ids (expand)"
		"[root] module.eks.module.self_managed_node_group.var.suspended_processes (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.suspended_processes (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.tag_specifications (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.tag_specifications (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.tags (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.tags (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.tags (expand)" -> "[root] module.eks.var.tags (expand)"
		"[root] module.eks.module.self_managed_node_group.var.target_group_arns (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.target_group_arns (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.termination_policies (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.termination_policies (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.update_launch_template_default_version (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.update_launch_template_default_version (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.use_mixed_instances_policy (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.use_mixed_instances_policy (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.use_name_prefix (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.use_name_prefix (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.user_data_template_path (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.user_data_template_path (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.vpc_security_group_ids (expand)" -> "[root] module.eks.local.node_security_group_id (expand)"
		"[root] module.eks.module.self_managed_node_group.var.vpc_security_group_ids (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.vpc_security_group_ids (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.wait_for_capacity_timeout (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.wait_for_capacity_timeout (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.wait_for_elb_capacity (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.wait_for_elb_capacity (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.module.self_managed_node_group.var.warm_pool (expand)" -> "[root] module.eks.module.self_managed_node_group (expand)"
		"[root] module.eks.module.self_managed_node_group.var.warm_pool (expand)" -> "[root] module.eks.var.self_managed_node_group_defaults (expand)"
		"[root] module.eks.output.aws_auth_configmap_yaml (expand)" -> "[root] module.eks.module.eks_managed_node_group (close)"
		"[root] module.eks.output.aws_auth_configmap_yaml (expand)" -> "[root] module.eks.module.fargate_profile (close)"
		"[root] module.eks.output.aws_auth_configmap_yaml (expand)" -> "[root] module.eks.module.self_managed_node_group (close)"
		"[root] module.eks.output.cloudwatch_log_group_arn (expand)" -> "[root] module.eks.aws_cloudwatch_log_group.this (expand)"
		"[root] module.eks.output.cloudwatch_log_group_name (expand)" -> "[root] module.eks.aws_cloudwatch_log_group.this (expand)"
		"[root] module.eks.output.cluster_addons (expand)" -> "[root] module.eks.aws_eks_addon.before_compute (expand)"
		"[root] module.eks.output.cluster_addons (expand)" -> "[root] module.eks.aws_eks_addon.this (expand)"
		"[root] module.eks.output.cluster_arn (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.output.cluster_certificate_authority_data (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.output.cluster_endpoint (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.output.cluster_iam_role_arn (expand)" -> "[root] module.eks.aws_iam_role.this (expand)"
		"[root] module.eks.output.cluster_iam_role_name (expand)" -> "[root] module.eks.aws_iam_role.this (expand)"
		"[root] module.eks.output.cluster_iam_role_unique_id (expand)" -> "[root] module.eks.aws_iam_role.this (expand)"
		"[root] module.eks.output.cluster_id (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.output.cluster_identity_providers (expand)" -> "[root] module.eks.aws_eks_identity_provider_config.this (expand)"
		"[root] module.eks.output.cluster_name (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.output.cluster_oidc_issuer_url (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.output.cluster_platform_version (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.output.cluster_primary_security_group_id (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.output.cluster_security_group_arn (expand)" -> "[root] module.eks.aws_security_group.cluster (expand)"
		"[root] module.eks.output.cluster_security_group_id (expand)" -> "[root] module.eks.aws_security_group.cluster (expand)"
		"[root] module.eks.output.cluster_status (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.output.cluster_tls_certificate_sha1_fingerprint (expand)" -> "[root] module.eks.data.tls_certificate.this (expand)"
		"[root] module.eks.output.cluster_version (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.output.eks_managed_node_groups (expand)" -> "[root] module.eks.module.eks_managed_node_group (close)"
		"[root] module.eks.output.eks_managed_node_groups_autoscaling_group_names (expand)" -> "[root] module.eks.module.eks_managed_node_group (close)"
		"[root] module.eks.output.fargate_profiles (expand)" -> "[root] module.eks.module.fargate_profile (close)"
		"[root] module.eks.output.kms_key_arn (expand)" -> "[root] module.eks.module.kms.output.key_arn (expand)"
		"[root] module.eks.output.kms_key_id (expand)" -> "[root] module.eks.module.kms.output.key_id (expand)"
		"[root] module.eks.output.kms_key_policy (expand)" -> "[root] module.eks.module.kms.output.key_policy (expand)"
		"[root] module.eks.output.node_security_group_arn (expand)" -> "[root] module.eks.aws_security_group.node (expand)"
		"[root] module.eks.output.node_security_group_id (expand)" -> "[root] module.eks.aws_security_group.node (expand)"
		"[root] module.eks.output.oidc_provider (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.output.oidc_provider_arn (expand)" -> "[root] module.eks.aws_iam_openid_connect_provider.oidc_provider (expand)"
		"[root] module.eks.output.self_managed_node_groups (expand)" -> "[root] module.eks.module.self_managed_node_group (close)"
		"[root] module.eks.output.self_managed_node_groups_autoscaling_group_names (expand)" -> "[root] module.eks.module.self_managed_node_group (close)"
		"[root] module.eks.time_sleep.this (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.time_sleep.this (expand)" -> "[root] module.eks.var.dataplane_wait_duration (expand)"
		"[root] module.eks.time_sleep.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/time\"]"
		"[root] module.eks.var.attach_cluster_encryption_policy (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.aws_auth_accounts (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.aws_auth_fargate_profile_pod_execution_role_arns (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.aws_auth_node_iam_role_arns_non_windows (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.aws_auth_node_iam_role_arns_windows (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.aws_auth_roles (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.aws_auth_users (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cloudwatch_log_group_kms_key_id (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cloudwatch_log_group_retention_in_days (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_additional_security_group_ids (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_addons (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_addons_timeouts (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_enabled_log_types (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_encryption_config (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_encryption_policy_description (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_encryption_policy_name (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_encryption_policy_path (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_encryption_policy_tags (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_encryption_policy_use_name_prefix (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_endpoint_private_access (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_endpoint_public_access (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_endpoint_public_access_cidrs (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_iam_role_dns_suffix (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_identity_providers (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_ip_family (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_name (expand)" -> "[root] local.cluster_name (expand)"
		"[root] module.eks.var.cluster_name (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_security_group_additional_rules (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_security_group_description (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_security_group_id (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_security_group_name (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_security_group_tags (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_security_group_use_name_prefix (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_service_ipv4_cidr (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_service_ipv6_cidr (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_tags (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_timeouts (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_version (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.control_plane_subnet_ids (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.create (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.create_aws_auth_configmap (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.create_cloudwatch_log_group (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.create_cluster_primary_security_group_tags (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.create_cluster_security_group (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.create_cni_ipv6_iam_policy (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.create_iam_role (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.create_kms_key (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.create_node_security_group (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.custom_oidc_thumbprints (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.dataplane_wait_duration (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.eks_managed_node_group_defaults (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.eks_managed_node_groups (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.enable_irsa (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.enable_kms_key_rotation (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.fargate_profile_defaults (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.fargate_profiles (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.iam_role_additional_policies (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.iam_role_arn (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.iam_role_description (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.iam_role_name (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.iam_role_path (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.iam_role_permissions_boundary (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.iam_role_tags (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.iam_role_use_name_prefix (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.kms_key_administrators (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.kms_key_aliases (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.kms_key_deletion_window_in_days (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.kms_key_description (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.kms_key_enable_default_policy (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.kms_key_override_policy_documents (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.kms_key_owners (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.kms_key_service_users (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.kms_key_source_policy_documents (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.kms_key_users (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.manage_aws_auth_configmap (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.node_security_group_additional_rules (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.node_security_group_description (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.node_security_group_enable_recommended_rules (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.node_security_group_id (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.node_security_group_name (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.node_security_group_tags (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.node_security_group_use_name_prefix (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.openid_connect_audiences (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.outpost_config (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.prefix_separator (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.putin_khuylo (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.self_managed_node_group_defaults (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.self_managed_node_groups (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.subnet_ids (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.subnet_ids (expand)" -> "[root] module.vpc.output.private_subnets (expand)"
		"[root] module.eks.var.tags (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.vpc_id (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.vpc_id (expand)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] module.irsa-ebs-csi (close)" -> "[root] module.irsa-ebs-csi.aws_iam_role_policy_attachment.custom (expand)"
		"[root] module.irsa-ebs-csi (close)" -> "[root] module.irsa-ebs-csi.output.iam_role_arn (expand)"
		"[root] module.irsa-ebs-csi (close)" -> "[root] module.irsa-ebs-csi.output.iam_role_name (expand)"
		"[root] module.irsa-ebs-csi (close)" -> "[root] module.irsa-ebs-csi.output.iam_role_path (expand)"
		"[root] module.irsa-ebs-csi (close)" -> "[root] module.irsa-ebs-csi.output.iam_role_unique_id (expand)"
		"[root] module.irsa-ebs-csi.aws_iam_role.this (expand)" -> "[root] module.irsa-ebs-csi.data.aws_iam_policy_document.assume_role_with_oidc (expand)"
		"[root] module.irsa-ebs-csi.aws_iam_role.this (expand)" -> "[root] module.irsa-ebs-csi.var.force_detach_policies (expand)"
		"[root] module.irsa-ebs-csi.aws_iam_role.this (expand)" -> "[root] module.irsa-ebs-csi.var.max_session_duration (expand)"
		"[root] module.irsa-ebs-csi.aws_iam_role.this (expand)" -> "[root] module.irsa-ebs-csi.var.role_description (expand)"
		"[root] module.irsa-ebs-csi.aws_iam_role.this (expand)" -> "[root] module.irsa-ebs-csi.var.role_name (expand)"
		"[root] module.irsa-ebs-csi.aws_iam_role.this (expand)" -> "[root] module.irsa-ebs-csi.var.role_name_prefix (expand)"
		"[root] module.irsa-ebs-csi.aws_iam_role.this (expand)" -> "[root] module.irsa-ebs-csi.var.role_path (expand)"
		"[root] module.irsa-ebs-csi.aws_iam_role.this (expand)" -> "[root] module.irsa-ebs-csi.var.role_permissions_boundary_arn (expand)"
		"[root] module.irsa-ebs-csi.aws_iam_role.this (expand)" -> "[root] module.irsa-ebs-csi.var.tags (expand)"
		"[root] module.irsa-ebs-csi.aws_iam_role_policy_attachment.custom (expand)" -> "[root] module.irsa-ebs-csi.aws_iam_role.this (expand)"
		"[root] module.irsa-ebs-csi.aws_iam_role_policy_attachment.custom (expand)" -> "[root] module.irsa-ebs-csi.local.number_of_role_policy_arns (expand)"
		"[root] module.irsa-ebs-csi.data.aws_caller_identity.current (expand)" -> "[root] module.irsa-ebs-csi (expand)"
		"[root] module.irsa-ebs-csi.data.aws_caller_identity.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.irsa-ebs-csi.data.aws_iam_policy_document.assume_role_with_oidc (expand)" -> "[root] module.irsa-ebs-csi.data.aws_partition.current (expand)"
		"[root] module.irsa-ebs-csi.data.aws_iam_policy_document.assume_role_with_oidc (expand)" -> "[root] module.irsa-ebs-csi.local.aws_account_id (expand)"
		"[root] module.irsa-ebs-csi.data.aws_iam_policy_document.assume_role_with_oidc (expand)" -> "[root] module.irsa-ebs-csi.local.urls (expand)"
		"[root] module.irsa-ebs-csi.data.aws_iam_policy_document.assume_role_with_oidc (expand)" -> "[root] module.irsa-ebs-csi.var.create_role (expand)"
		"[root] module.irsa-ebs-csi.data.aws_iam_policy_document.assume_role_with_oidc (expand)" -> "[root] module.irsa-ebs-csi.var.oidc_fully_qualified_audiences (expand)"
		"[root] module.irsa-ebs-csi.data.aws_iam_policy_document.assume_role_with_oidc (expand)" -> "[root] module.irsa-ebs-csi.var.oidc_fully_qualified_subjects (expand)"
		"[root] module.irsa-ebs-csi.data.aws_iam_policy_document.assume_role_with_oidc (expand)" -> "[root] module.irsa-ebs-csi.var.oidc_subjects_with_wildcards (expand)"
		"[root] module.irsa-ebs-csi.data.aws_partition.current (expand)" -> "[root] module.irsa-ebs-csi (expand)"
		"[root] module.irsa-ebs-csi.data.aws_partition.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.irsa-ebs-csi.local.aws_account_id (expand)" -> "[root] module.irsa-ebs-csi.data.aws_caller_identity.current (expand)"
		"[root] module.irsa-ebs-csi.local.aws_account_id (expand)" -> "[root] module.irsa-ebs-csi.var.aws_account_id (expand)"
		"[root] module.irsa-ebs-csi.local.number_of_role_policy_arns (expand)" -> "[root] module.irsa-ebs-csi.var.number_of_role_policy_arns (expand)"
		"[root] module.irsa-ebs-csi.local.number_of_role_policy_arns (expand)" -> "[root] module.irsa-ebs-csi.var.role_policy_arns (expand)"
		"[root] module.irsa-ebs-csi.local.urls (expand)" -> "[root] module.irsa-ebs-csi.var.provider_url (expand)"
		"[root] module.irsa-ebs-csi.local.urls (expand)" -> "[root] module.irsa-ebs-csi.var.provider_urls (expand)"
		"[root] module.irsa-ebs-csi.output.iam_role_arn (expand)" -> "[root] module.irsa-ebs-csi.aws_iam_role.this (expand)"
		"[root] module.irsa-ebs-csi.output.iam_role_name (expand)" -> "[root] module.irsa-ebs-csi.aws_iam_role.this (expand)"
		"[root] module.irsa-ebs-csi.output.iam_role_path (expand)" -> "[root] module.irsa-ebs-csi.aws_iam_role.this (expand)"
		"[root] module.irsa-ebs-csi.output.iam_role_unique_id (expand)" -> "[root] module.irsa-ebs-csi.aws_iam_role.this (expand)"
		"[root] module.irsa-ebs-csi.var.aws_account_id (expand)" -> "[root] module.irsa-ebs-csi (expand)"
		"[root] module.irsa-ebs-csi.var.create_role (expand)" -> "[root] module.irsa-ebs-csi (expand)"
		"[root] module.irsa-ebs-csi.var.force_detach_policies (expand)" -> "[root] module.irsa-ebs-csi (expand)"
		"[root] module.irsa-ebs-csi.var.max_session_duration (expand)" -> "[root] module.irsa-ebs-csi (expand)"
		"[root] module.irsa-ebs-csi.var.number_of_role_policy_arns (expand)" -> "[root] module.irsa-ebs-csi (expand)"
		"[root] module.irsa-ebs-csi.var.oidc_fully_qualified_audiences (expand)" -> "[root] module.irsa-ebs-csi (expand)"
		"[root] module.irsa-ebs-csi.var.oidc_fully_qualified_subjects (expand)" -> "[root] module.irsa-ebs-csi (expand)"
		"[root] module.irsa-ebs-csi.var.oidc_subjects_with_wildcards (expand)" -> "[root] module.irsa-ebs-csi (expand)"
		"[root] module.irsa-ebs-csi.var.provider_url (expand)" -> "[root] module.eks.output.oidc_provider (expand)"
		"[root] module.irsa-ebs-csi.var.provider_url (expand)" -> "[root] module.irsa-ebs-csi (expand)"
		"[root] module.irsa-ebs-csi.var.provider_urls (expand)" -> "[root] module.irsa-ebs-csi (expand)"
		"[root] module.irsa-ebs-csi.var.role_description (expand)" -> "[root] module.irsa-ebs-csi (expand)"
		"[root] module.irsa-ebs-csi.var.role_name (expand)" -> "[root] module.eks.output.cluster_name (expand)"
		"[root] module.irsa-ebs-csi.var.role_name (expand)" -> "[root] module.irsa-ebs-csi (expand)"
		"[root] module.irsa-ebs-csi.var.role_name_prefix (expand)" -> "[root] module.irsa-ebs-csi (expand)"
		"[root] module.irsa-ebs-csi.var.role_path (expand)" -> "[root] module.irsa-ebs-csi (expand)"
		"[root] module.irsa-ebs-csi.var.role_permissions_boundary_arn (expand)" -> "[root] module.irsa-ebs-csi (expand)"
		"[root] module.irsa-ebs-csi.var.role_policy_arns (expand)" -> "[root] data.aws_iam_policy.ebs_csi_policy (expand)"
		"[root] module.irsa-ebs-csi.var.role_policy_arns (expand)" -> "[root] module.irsa-ebs-csi (expand)"
		"[root] module.irsa-ebs-csi.var.tags (expand)" -> "[root] module.irsa-ebs-csi (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_default_network_acl.this (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_default_route_table.default (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_default_security_group.this (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.database_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.database_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.elasticache_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.elasticache_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.intra_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.intra_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.outpost_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.outpost_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.private_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.private_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.public_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.public_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.redshift_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.redshift_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_route.database_dns64_nat_gateway (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_route.private_dns64_nat_gateway (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_route_table_association.outpost (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_vpc_dhcp_options_association.this (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.azs (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.cgw_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.cgw_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_internet_gateway_route_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_ipv6_egress_route_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_nat_gateway_route_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnet_group (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnet_group_name (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_route_table_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_security_group_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_cidr_block (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_default_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_default_route_table_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_default_security_group_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_enable_dns_hostnames (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_enable_dns_support (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_instance_tenancy (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_main_route_table_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.dhcp_options_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.egress_only_internet_gateway_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnet_group (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnet_group_name (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.igw_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.igw_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.name (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.nat_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.nat_public_ips (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.natgw_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_ipv6_egress_route_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_nat_gateway_route_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_internet_gateway_ipv6_route_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_internet_gateway_route_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_public_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_subnet_group (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.this_customer_gateway (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vgw_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vgw_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_cidr_block (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_enable_dns_hostnames (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_enable_dns_support (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_flow_log_cloudwatch_iam_role_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_flow_log_destination_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_flow_log_destination_type (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_flow_log_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_instance_tenancy (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_ipv6_association_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_ipv6_cidr_block (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_main_route_table_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_owner_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_secondary_cidr_blocks (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.local.create_flow_log_cloudwatch_log_group (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.local.flow_log_cloudwatch_log_group_name_suffix (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.var.flow_log_cloudwatch_log_group_kms_key_id (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.var.flow_log_cloudwatch_log_group_name_prefix (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.var.flow_log_cloudwatch_log_group_retention_in_days (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.var.vpc_flow_log_tags (expand)"
		"[root] module.vpc.aws_customer_gateway.this (expand)" -> "[root] module.vpc.var.customer_gateway_tags (expand)"
		"[root] module.vpc.aws_customer_gateway.this (expand)" -> "[root] module.vpc.var.customer_gateways (expand)"
		"[root] module.vpc.aws_customer_gateway.this (expand)" -> "[root] module.vpc.var.name (expand)"
		"[root] module.vpc.aws_customer_gateway.this (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_customer_gateway.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.aws_db_subnet_group.database (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.aws_db_subnet_group.database (expand)" -> "[root] module.vpc.var.create_database_subnet_group (expand)"
		"[root] module.vpc.aws_db_subnet_group.database (expand)" -> "[root] module.vpc.var.database_subnet_group_name (expand)"
		"[root] module.vpc.aws_db_subnet_group.database (expand)" -> "[root] module.vpc.var.database_subnet_group_tags (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.var.default_network_acl_egress (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.var.default_network_acl_ingress (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.var.default_network_acl_name (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.var.default_network_acl_tags (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.var.manage_default_network_acl (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.var.default_route_table_name (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.var.default_route_table_propagating_vgws (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.var.default_route_table_routes (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.var.default_route_table_tags (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.var.manage_default_route_table (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.var.default_security_group_egress (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.var.default_security_group_ingress (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.var.default_security_group_name (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.var.default_security_group_tags (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.var.manage_default_security_group (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.default_vpc_enable_dns_hostnames (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.default_vpc_enable_dns_support (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.default_vpc_name (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.default_vpc_tags (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.manage_default_vpc (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.aws_egress_only_internet_gateway.this (expand)" -> "[root] module.vpc.local.max_subnet_length (expand)"
		"[root] module.vpc.aws_egress_only_internet_gateway.this (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_egress_only_internet_gateway.this (expand)" -> "[root] module.vpc.var.create_egress_only_igw (expand)"
		"[root] module.vpc.aws_egress_only_internet_gateway.this (expand)" -> "[root] module.vpc.var.igw_tags (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.local.nat_gateway_count (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.var.enable_nat_gateway (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.var.nat_eip_tags (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.var.reuse_nat_ips (expand)"
		"[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)" -> "[root] module.vpc.var.create_elasticache_subnet_group (expand)"
		"[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_group_name (expand)"
		"[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_group_tags (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.local.flow_log_destination_arn (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.local.flow_log_iam_role_arn (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_file_format (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_hive_compatible_partitions (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_log_format (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_max_aggregation_interval (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_per_hour_partition (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_traffic_type (expand)"
		"[root] module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch (expand)"
		"[root] module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.var.vpc_flow_log_tags (expand)"
		"[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role (expand)"
		"[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.var.vpc_flow_log_permissions_boundary (expand)"
		"[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.var.vpc_flow_log_tags (expand)"
		"[root] module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch (expand)"
		"[root] module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)"
		"[root] module.vpc.aws_internet_gateway.this (expand)" -> "[root] module.vpc.local.create_public_subnets (expand)"
		"[root] module.vpc.aws_internet_gateway.this (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_internet_gateway.this (expand)" -> "[root] module.vpc.var.create_igw (expand)"
		"[root] module.vpc.aws_internet_gateway.this (expand)" -> "[root] module.vpc.var.igw_tags (expand)"
		"[root] module.vpc.aws_nat_gateway.this (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.aws_nat_gateway.this (expand)" -> "[root] module.vpc.local.nat_gateway_ips (expand)"
		"[root] module.vpc.aws_nat_gateway.this (expand)" -> "[root] module.vpc.var.nat_gateway_tags (expand)"
		"[root] module.vpc.aws_network_acl.database (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.aws_network_acl.database (expand)" -> "[root] module.vpc.local.create_database_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.database (expand)" -> "[root] module.vpc.var.database_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.elasticache (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.aws_network_acl.elasticache (expand)" -> "[root] module.vpc.local.create_elasticache_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.elasticache (expand)" -> "[root] module.vpc.var.elasticache_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.intra (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.aws_network_acl.intra (expand)" -> "[root] module.vpc.local.create_intra_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.intra (expand)" -> "[root] module.vpc.var.intra_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.outpost (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.aws_network_acl.outpost (expand)" -> "[root] module.vpc.local.create_outpost_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.outpost (expand)" -> "[root] module.vpc.var.outpost_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.private (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.aws_network_acl.private (expand)" -> "[root] module.vpc.local.create_private_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.private (expand)" -> "[root] module.vpc.var.private_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.public (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.aws_network_acl.public (expand)" -> "[root] module.vpc.var.public_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.public (expand)" -> "[root] module.vpc.var.public_dedicated_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.redshift (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.aws_network_acl.redshift (expand)" -> "[root] module.vpc.local.create_redshift_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.redshift (expand)" -> "[root] module.vpc.var.redshift_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl_rule.database_inbound (expand)" -> "[root] module.vpc.aws_network_acl.database (expand)"
		"[root] module.vpc.aws_network_acl_rule.database_inbound (expand)" -> "[root] module.vpc.var.database_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.database_outbound (expand)" -> "[root] module.vpc.aws_network_acl.database (expand)"
		"[root] module.vpc.aws_network_acl_rule.database_outbound (expand)" -> "[root] module.vpc.var.database_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.elasticache_inbound (expand)" -> "[root] module.vpc.aws_network_acl.elasticache (expand)"
		"[root] module.vpc.aws_network_acl_rule.elasticache_inbound (expand)" -> "[root] module.vpc.var.elasticache_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.elasticache_outbound (expand)" -> "[root] module.vpc.aws_network_acl.elasticache (expand)"
		"[root] module.vpc.aws_network_acl_rule.elasticache_outbound (expand)" -> "[root] module.vpc.var.elasticache_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.intra_inbound (expand)" -> "[root] module.vpc.aws_network_acl.intra (expand)"
		"[root] module.vpc.aws_network_acl_rule.intra_inbound (expand)" -> "[root] module.vpc.var.intra_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.intra_outbound (expand)" -> "[root] module.vpc.aws_network_acl.intra (expand)"
		"[root] module.vpc.aws_network_acl_rule.intra_outbound (expand)" -> "[root] module.vpc.var.intra_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.outpost_inbound (expand)" -> "[root] module.vpc.aws_network_acl.outpost (expand)"
		"[root] module.vpc.aws_network_acl_rule.outpost_inbound (expand)" -> "[root] module.vpc.var.outpost_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.outpost_outbound (expand)" -> "[root] module.vpc.aws_network_acl.outpost (expand)"
		"[root] module.vpc.aws_network_acl_rule.outpost_outbound (expand)" -> "[root] module.vpc.var.outpost_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.private_inbound (expand)" -> "[root] module.vpc.aws_network_acl.private (expand)"
		"[root] module.vpc.aws_network_acl_rule.private_inbound (expand)" -> "[root] module.vpc.var.private_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.private_outbound (expand)" -> "[root] module.vpc.aws_network_acl.private (expand)"
		"[root] module.vpc.aws_network_acl_rule.private_outbound (expand)" -> "[root] module.vpc.var.private_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.public_inbound (expand)" -> "[root] module.vpc.aws_network_acl.public (expand)"
		"[root] module.vpc.aws_network_acl_rule.public_inbound (expand)" -> "[root] module.vpc.var.public_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.public_outbound (expand)" -> "[root] module.vpc.aws_network_acl.public (expand)"
		"[root] module.vpc.aws_network_acl_rule.public_outbound (expand)" -> "[root] module.vpc.var.public_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.redshift_inbound (expand)" -> "[root] module.vpc.aws_network_acl.redshift (expand)"
		"[root] module.vpc.aws_network_acl_rule.redshift_inbound (expand)" -> "[root] module.vpc.var.redshift_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.redshift_outbound (expand)" -> "[root] module.vpc.aws_network_acl.redshift (expand)"
		"[root] module.vpc.aws_network_acl_rule.redshift_outbound (expand)" -> "[root] module.vpc.var.redshift_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_redshift_subnet_group.redshift (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.aws_redshift_subnet_group.redshift (expand)" -> "[root] module.vpc.var.create_redshift_subnet_group (expand)"
		"[root] module.vpc.aws_redshift_subnet_group.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_group_name (expand)"
		"[root] module.vpc.aws_redshift_subnet_group.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_group_tags (expand)"
		"[root] module.vpc.aws_route.database_dns64_nat_gateway (expand)" -> "[root] module.vpc.aws_nat_gateway.this (expand)"
		"[root] module.vpc.aws_route.database_dns64_nat_gateway (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.aws_route.database_dns64_nat_gateway (expand)" -> "[root] module.vpc.var.create_database_nat_gateway_route (expand)"
		"[root] module.vpc.aws_route.database_dns64_nat_gateway (expand)" -> "[root] module.vpc.var.private_subnet_enable_dns64 (expand)"
		"[root] module.vpc.aws_route.database_internet_gateway (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.aws_route.database_internet_gateway (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.aws_route.database_internet_gateway (expand)" -> "[root] module.vpc.var.create_database_nat_gateway_route (expand)"
		"[root] module.vpc.aws_route.database_ipv6_egress (expand)" -> "[root] module.vpc.aws_egress_only_internet_gateway.this (expand)"
		"[root] module.vpc.aws_route.database_ipv6_egress (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.aws_route.database_nat_gateway (expand)" -> "[root] module.vpc.aws_nat_gateway.this (expand)"
		"[root] module.vpc.aws_route.database_nat_gateway (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.aws_route.database_nat_gateway (expand)" -> "[root] module.vpc.var.create_database_nat_gateway_route (expand)"
		"[root] module.vpc.aws_route.private_dns64_nat_gateway (expand)" -> "[root] module.vpc.aws_nat_gateway.this (expand)"
		"[root] module.vpc.aws_route.private_dns64_nat_gateway (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route.private_dns64_nat_gateway (expand)" -> "[root] module.vpc.var.private_subnet_enable_dns64 (expand)"
		"[root] module.vpc.aws_route.private_ipv6_egress (expand)" -> "[root] module.vpc.aws_egress_only_internet_gateway.this (expand)"
		"[root] module.vpc.aws_route.private_ipv6_egress (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route.private_nat_gateway (expand)" -> "[root] module.vpc.aws_nat_gateway.this (expand)"
		"[root] module.vpc.aws_route.private_nat_gateway (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route.private_nat_gateway (expand)" -> "[root] module.vpc.var.nat_gateway_destination_cidr_block (expand)"
		"[root] module.vpc.aws_route.public_internet_gateway (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.aws_route.public_internet_gateway (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.aws_route.public_internet_gateway_ipv6 (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.aws_route.public_internet_gateway_ipv6 (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.local.create_database_route_table (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.create_database_internet_gateway_route (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.database_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.database_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.single_nat_gateway (expand)"
		"[root] module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.vpc.local.create_elasticache_route_table (expand)"
		"[root] module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.vpc.var.elasticache_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.intra (expand)" -> "[root] module.vpc.local.create_intra_subnets (expand)"
		"[root] module.vpc.aws_route_table.intra (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.intra (expand)" -> "[root] module.vpc.var.intra_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.intra (expand)" -> "[root] module.vpc.var.intra_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.private (expand)" -> "[root] module.vpc.local.create_private_subnets (expand)"
		"[root] module.vpc.aws_route_table.private (expand)" -> "[root] module.vpc.local.nat_gateway_count (expand)"
		"[root] module.vpc.aws_route_table.private (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.private (expand)" -> "[root] module.vpc.var.private_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.private (expand)" -> "[root] module.vpc.var.private_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.public (expand)" -> "[root] module.vpc.local.create_public_subnets (expand)"
		"[root] module.vpc.aws_route_table.public (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.public (expand)" -> "[root] module.vpc.var.public_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.public (expand)" -> "[root] module.vpc.var.public_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.redshift (expand)" -> "[root] module.vpc.local.create_redshift_route_table (expand)"
		"[root] module.vpc.aws_route_table.redshift (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.redshift (expand)" -> "[root] module.vpc.var.redshift_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table_association.database (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.aws_route_table_association.database (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table_association.database (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.aws_route_table_association.elasticache (expand)" -> "[root] module.vpc.aws_route_table.elasticache (expand)"
		"[root] module.vpc.aws_route_table_association.elasticache (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table_association.elasticache (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.aws_route_table_association.intra (expand)" -> "[root] module.vpc.aws_route_table.intra (expand)"
		"[root] module.vpc.aws_route_table_association.intra (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.aws_route_table_association.outpost (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table_association.outpost (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.aws_route_table_association.private (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table_association.private (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.aws_route_table_association.public (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.aws_route_table_association.public (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.aws_route_table_association.redshift (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table_association.redshift (expand)" -> "[root] module.vpc.aws_route_table.redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift (expand)" -> "[root] module.vpc.var.enable_public_redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.vpc.aws_route_table.redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.vpc.var.enable_public_redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.vpc.var.single_nat_gateway (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.local.create_database_subnets (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_enable_dns64 (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_enable_resource_name_dns_a_record_on_launch (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_ipv6_native (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_names (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_private_dns_hostname_type_on_launch (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.local.create_elasticache_subnets (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_enable_dns64 (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_enable_resource_name_dns_a_record_on_launch (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_ipv6_native (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_names (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_private_dns_hostname_type_on_launch (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.local.create_intra_subnets (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_enable_dns64 (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_enable_resource_name_dns_a_record_on_launch (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_ipv6_native (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_names (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_private_dns_hostname_type_on_launch (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.local.create_outpost_subnets (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.customer_owned_ipv4_pool (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.map_customer_owned_ip_on_launch (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_arn (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_az (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_enable_dns64 (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_enable_resource_name_dns_a_record_on_launch (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_ipv6_native (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_names (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_private_dns_hostname_type_on_launch (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.local.create_private_subnets (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_enable_dns64 (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_enable_resource_name_dns_a_record_on_launch (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_ipv6_native (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_names (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_private_dns_hostname_type_on_launch (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_tags_per_az (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.local.create_public_subnets (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.map_public_ip_on_launch (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.one_nat_gateway_per_az (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_enable_dns64 (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_enable_resource_name_dns_a_record_on_launch (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_ipv6_native (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_names (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_private_dns_hostname_type_on_launch (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_tags_per_az (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.local.create_redshift_subnets (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_enable_dns64 (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_enable_resource_name_dns_a_record_on_launch (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_ipv6_native (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_names (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_private_dns_hostname_type_on_launch (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_tags (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.local.create_vpc (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.cidr (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.enable_dns_hostnames (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.enable_dns_support (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.enable_ipv6 (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.enable_network_address_usage_metrics (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.instance_tenancy (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.ipv4_ipam_pool_id (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.ipv4_netmask_length (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.ipv6_cidr (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.ipv6_cidr_block_network_border_group (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.ipv6_ipam_pool_id (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.ipv6_netmask_length (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.name (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.use_ipam_pool (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.vpc_tags (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.local.create_vpc (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_domain_name (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_domain_name_servers (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_netbios_name_servers (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_netbios_node_type (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_ntp_servers (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_tags (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.enable_dhcp_options (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.name (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.aws_vpc_dhcp_options_association.this (expand)" -> "[root] module.vpc.aws_vpc_dhcp_options.this (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options_association.this (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)" -> "[root] module.vpc.var.secondary_cidr_blocks (expand)"
		"[root] module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.vpc.var.amazon_side_asn (expand)"
		"[root] module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.vpc.var.enable_vpn_gateway (expand)"
		"[root] module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.vpc.var.vpn_gateway_az (expand)"
		"[root] module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.vpc.var.vpn_gateway_tags (expand)"
		"[root] module.vpc.aws_vpn_gateway_attachment.this (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_vpn_gateway_attachment.this (expand)" -> "[root] module.vpc.var.vpn_gateway_id (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)" -> "[root] module.vpc.aws_route_table.intra (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)" -> "[root] module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)" -> "[root] module.vpc.aws_vpn_gateway_attachment.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)" -> "[root] module.vpc.var.propagate_intra_route_tables_vgw (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)" -> "[root] module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)" -> "[root] module.vpc.aws_vpn_gateway_attachment.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)" -> "[root] module.vpc.var.propagate_private_route_tables_vgw (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)" -> "[root] module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)" -> "[root] module.vpc.aws_vpn_gateway_attachment.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)" -> "[root] module.vpc.var.propagate_public_route_tables_vgw (expand)"
		"[root] module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role (expand)" -> "[root] module.vpc.local.create_flow_log_cloudwatch_iam_role (expand)"
		"[root] module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.local.create_flow_log_cloudwatch_iam_role (expand)"
		"[root] module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.local.create_database_network_acl (expand)" -> "[root] module.vpc.local.create_database_subnets (expand)"
		"[root] module.vpc.local.create_database_network_acl (expand)" -> "[root] module.vpc.var.database_dedicated_network_acl (expand)"
		"[root] module.vpc.local.create_database_route_table (expand)" -> "[root] module.vpc.local.create_database_subnets (expand)"
		"[root] module.vpc.local.create_database_route_table (expand)" -> "[root] module.vpc.var.create_database_subnet_route_table (expand)"
		"[root] module.vpc.local.create_database_subnets (expand)" -> "[root] module.vpc.local.create_vpc (expand)"
		"[root] module.vpc.local.create_database_subnets (expand)" -> "[root] module.vpc.local.len_database_subnets (expand)"
		"[root] module.vpc.local.create_elasticache_network_acl (expand)" -> "[root] module.vpc.local.create_elasticache_subnets (expand)"
		"[root] module.vpc.local.create_elasticache_network_acl (expand)" -> "[root] module.vpc.var.elasticache_dedicated_network_acl (expand)"
		"[root] module.vpc.local.create_elasticache_route_table (expand)" -> "[root] module.vpc.local.create_elasticache_subnets (expand)"
		"[root] module.vpc.local.create_elasticache_route_table (expand)" -> "[root] module.vpc.var.create_elasticache_subnet_route_table (expand)"
		"[root] module.vpc.local.create_elasticache_subnets (expand)" -> "[root] module.vpc.local.create_vpc (expand)"
		"[root] module.vpc.local.create_elasticache_subnets (expand)" -> "[root] module.vpc.local.len_elasticache_subnets (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_iam_role (expand)" -> "[root] module.vpc.local.enable_flow_log (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_iam_role (expand)" -> "[root] module.vpc.var.create_flow_log_cloudwatch_iam_role (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_iam_role (expand)" -> "[root] module.vpc.var.flow_log_destination_type (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_log_group (expand)" -> "[root] module.vpc.local.enable_flow_log (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_log_group (expand)" -> "[root] module.vpc.var.create_flow_log_cloudwatch_log_group (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_log_group (expand)" -> "[root] module.vpc.var.flow_log_destination_type (expand)"
		"[root] module.vpc.local.create_intra_network_acl (expand)" -> "[root] module.vpc.local.create_intra_subnets (expand)"
		"[root] module.vpc.local.create_intra_network_acl (expand)" -> "[root] module.vpc.var.intra_dedicated_network_acl (expand)"
		"[root] module.vpc.local.create_intra_subnets (expand)" -> "[root] module.vpc.local.create_vpc (expand)"
		"[root] module.vpc.local.create_intra_subnets (expand)" -> "[root] module.vpc.local.len_intra_subnets (expand)"
		"[root] module.vpc.local.create_outpost_network_acl (expand)" -> "[root] module.vpc.local.create_outpost_subnets (expand)"
		"[root] module.vpc.local.create_outpost_network_acl (expand)" -> "[root] module.vpc.var.outpost_dedicated_network_acl (expand)"
		"[root] module.vpc.local.create_outpost_subnets (expand)" -> "[root] module.vpc.local.create_vpc (expand)"
		"[root] module.vpc.local.create_outpost_subnets (expand)" -> "[root] module.vpc.local.len_outpost_subnets (expand)"
		"[root] module.vpc.local.create_private_network_acl (expand)" -> "[root] module.vpc.local.create_private_subnets (expand)"
		"[root] module.vpc.local.create_private_network_acl (expand)" -> "[root] module.vpc.var.private_dedicated_network_acl (expand)"
		"[root] module.vpc.local.create_private_subnets (expand)" -> "[root] module.vpc.local.create_vpc (expand)"
		"[root] module.vpc.local.create_private_subnets (expand)" -> "[root] module.vpc.local.len_private_subnets (expand)"
		"[root] module.vpc.local.create_public_subnets (expand)" -> "[root] module.vpc.local.create_vpc (expand)"
		"[root] module.vpc.local.create_public_subnets (expand)" -> "[root] module.vpc.local.len_public_subnets (expand)"
		"[root] module.vpc.local.create_redshift_network_acl (expand)" -> "[root] module.vpc.local.create_redshift_subnets (expand)"
		"[root] module.vpc.local.create_redshift_network_acl (expand)" -> "[root] module.vpc.var.redshift_dedicated_network_acl (expand)"
		"[root] module.vpc.local.create_redshift_route_table (expand)" -> "[root] module.vpc.local.create_redshift_subnets (expand)"
		"[root] module.vpc.local.create_redshift_route_table (expand)" -> "[root] module.vpc.var.create_redshift_subnet_route_table (expand)"
		"[root] module.vpc.local.create_redshift_subnets (expand)" -> "[root] module.vpc.local.create_vpc (expand)"
		"[root] module.vpc.local.create_redshift_subnets (expand)" -> "[root] module.vpc.local.len_redshift_subnets (expand)"
		"[root] module.vpc.local.create_vpc (expand)" -> "[root] module.vpc.var.create_vpc (expand)"
		"[root] module.vpc.local.create_vpc (expand)" -> "[root] module.vpc.var.putin_khuylo (expand)"
		"[root] module.vpc.local.enable_flow_log (expand)" -> "[root] module.vpc.var.create_vpc (expand)"
		"[root] module.vpc.local.enable_flow_log (expand)" -> "[root] module.vpc.var.enable_flow_log (expand)"
		"[root] module.vpc.local.flow_log_cloudwatch_log_group_name_suffix (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.local.flow_log_cloudwatch_log_group_name_suffix (expand)" -> "[root] module.vpc.var.flow_log_cloudwatch_log_group_name_suffix (expand)"
		"[root] module.vpc.local.flow_log_destination_arn (expand)" -> "[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)"
		"[root] module.vpc.local.flow_log_destination_arn (expand)" -> "[root] module.vpc.var.flow_log_destination_arn (expand)"
		"[root] module.vpc.local.flow_log_iam_role_arn (expand)" -> "[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)"
		"[root] module.vpc.local.flow_log_iam_role_arn (expand)" -> "[root] module.vpc.var.flow_log_cloudwatch_iam_role_arn (expand)"
		"[root] module.vpc.local.len_database_subnets (expand)" -> "[root] module.vpc.var.database_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.local.len_database_subnets (expand)" -> "[root] module.vpc.var.database_subnets (expand)"
		"[root] module.vpc.local.len_elasticache_subnets (expand)" -> "[root] module.vpc.var.elasticache_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.local.len_elasticache_subnets (expand)" -> "[root] module.vpc.var.elasticache_subnets (expand)"
		"[root] module.vpc.local.len_intra_subnets (expand)" -> "[root] module.vpc.var.intra_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.local.len_intra_subnets (expand)" -> "[root] module.vpc.var.intra_subnets (expand)"
		"[root] module.vpc.local.len_outpost_subnets (expand)" -> "[root] module.vpc.var.outpost_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.local.len_outpost_subnets (expand)" -> "[root] module.vpc.var.outpost_subnets (expand)"
		"[root] module.vpc.local.len_private_subnets (expand)" -> "[root] module.vpc.var.private_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.local.len_private_subnets (expand)" -> "[root] module.vpc.var.private_subnets (expand)"
		"[root] module.vpc.local.len_public_subnets (expand)" -> "[root] module.vpc.var.public_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.local.len_public_subnets (expand)" -> "[root] module.vpc.var.public_subnets (expand)"
		"[root] module.vpc.local.len_redshift_subnets (expand)" -> "[root] module.vpc.var.redshift_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.local.len_redshift_subnets (expand)" -> "[root] module.vpc.var.redshift_subnets (expand)"
		"[root] module.vpc.local.max_subnet_length (expand)" -> "[root] module.vpc.local.len_database_subnets (expand)"
		"[root] module.vpc.local.max_subnet_length (expand)" -> "[root] module.vpc.local.len_elasticache_subnets (expand)"
		"[root] module.vpc.local.max_subnet_length (expand)" -> "[root] module.vpc.local.len_intra_subnets (expand)"
		"[root] module.vpc.local.max_subnet_length (expand)" -> "[root] module.vpc.local.len_private_subnets (expand)"
		"[root] module.vpc.local.max_subnet_length (expand)" -> "[root] module.vpc.local.len_public_subnets (expand)"
		"[root] module.vpc.local.max_subnet_length (expand)" -> "[root] module.vpc.local.len_redshift_subnets (expand)"
		"[root] module.vpc.local.nat_gateway_count (expand)" -> "[root] module.vpc.local.max_subnet_length (expand)"
		"[root] module.vpc.local.nat_gateway_count (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.local.nat_gateway_count (expand)" -> "[root] module.vpc.var.one_nat_gateway_per_az (expand)"
		"[root] module.vpc.local.nat_gateway_count (expand)" -> "[root] module.vpc.var.single_nat_gateway (expand)"
		"[root] module.vpc.local.nat_gateway_ips (expand)" -> "[root] module.vpc.aws_eip.nat (expand)"
		"[root] module.vpc.local.nat_gateway_ips (expand)" -> "[root] module.vpc.var.external_nat_ip_ids (expand)"
		"[root] module.vpc.local.private_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.local.public_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.local.redshift_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.redshift (expand)"
		"[root] module.vpc.local.vpc_id (expand)" -> "[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)"
		"[root] module.vpc.output.azs (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.output.cgw_arns (expand)" -> "[root] module.vpc.aws_customer_gateway.this (expand)"
		"[root] module.vpc.output.cgw_ids (expand)" -> "[root] module.vpc.aws_customer_gateway.this (expand)"
		"[root] module.vpc.output.database_internet_gateway_route_id (expand)" -> "[root] module.vpc.aws_route.database_internet_gateway (expand)"
		"[root] module.vpc.output.database_ipv6_egress_route_id (expand)" -> "[root] module.vpc.aws_route.database_ipv6_egress (expand)"
		"[root] module.vpc.output.database_nat_gateway_route_ids (expand)" -> "[root] module.vpc.aws_route.database_nat_gateway (expand)"
		"[root] module.vpc.output.database_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.database (expand)"
		"[root] module.vpc.output.database_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.database (expand)"
		"[root] module.vpc.output.database_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.database (expand)"
		"[root] module.vpc.output.database_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.output.database_route_table_ids (expand)" -> "[root] module.vpc.local.private_route_table_ids (expand)"
		"[root] module.vpc.output.database_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.output.database_subnet_group (expand)" -> "[root] module.vpc.aws_db_subnet_group.database (expand)"
		"[root] module.vpc.output.database_subnet_group_name (expand)" -> "[root] module.vpc.aws_db_subnet_group.database (expand)"
		"[root] module.vpc.output.database_subnets (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.output.database_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.output.database_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.output.default_network_acl_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.default_route_table_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.default_security_group_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_arn (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_cidr_block (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_default_network_acl_id (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_default_route_table_id (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_default_security_group_id (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_enable_dns_hostnames (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_enable_dns_support (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_id (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_instance_tenancy (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_main_route_table_id (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.dhcp_options_id (expand)" -> "[root] module.vpc.aws_vpc_dhcp_options.this (expand)"
		"[root] module.vpc.output.egress_only_internet_gateway_id (expand)" -> "[root] module.vpc.aws_egress_only_internet_gateway.this (expand)"
		"[root] module.vpc.output.elasticache_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.elasticache (expand)"
		"[root] module.vpc.output.elasticache_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.elasticache (expand)"
		"[root] module.vpc.output.elasticache_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.elasticache (expand)"
		"[root] module.vpc.output.elasticache_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.elasticache (expand)"
		"[root] module.vpc.output.elasticache_route_table_ids (expand)" -> "[root] module.vpc.local.private_route_table_ids (expand)"
		"[root] module.vpc.output.elasticache_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.output.elasticache_subnet_group (expand)" -> "[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)"
		"[root] module.vpc.output.elasticache_subnet_group_name (expand)" -> "[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)"
		"[root] module.vpc.output.elasticache_subnets (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.output.elasticache_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.output.elasticache_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.output.igw_arn (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.output.igw_id (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.output.intra_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.intra (expand)"
		"[root] module.vpc.output.intra_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.intra (expand)"
		"[root] module.vpc.output.intra_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.intra (expand)"
		"[root] module.vpc.output.intra_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.intra (expand)"
		"[root] module.vpc.output.intra_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.output.intra_subnets (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.output.intra_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.output.intra_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.output.name (expand)" -> "[root] module.vpc.var.name (expand)"
		"[root] module.vpc.output.nat_ids (expand)" -> "[root] module.vpc.aws_eip.nat (expand)"
		"[root] module.vpc.output.nat_public_ips (expand)" -> "[root] module.vpc.aws_eip.nat (expand)"
		"[root] module.vpc.output.nat_public_ips (expand)" -> "[root] module.vpc.var.external_nat_ips (expand)"
		"[root] module.vpc.output.natgw_ids (expand)" -> "[root] module.vpc.aws_nat_gateway.this (expand)"
		"[root] module.vpc.output.outpost_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.outpost (expand)"
		"[root] module.vpc.output.outpost_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.outpost (expand)"
		"[root] module.vpc.output.outpost_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.output.outpost_subnets (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.output.outpost_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.output.outpost_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.output.private_ipv6_egress_route_ids (expand)" -> "[root] module.vpc.aws_route.private_ipv6_egress (expand)"
		"[root] module.vpc.output.private_nat_gateway_route_ids (expand)" -> "[root] module.vpc.aws_route.private_nat_gateway (expand)"
		"[root] module.vpc.output.private_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.private (expand)"
		"[root] module.vpc.output.private_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.private (expand)"
		"[root] module.vpc.output.private_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.private (expand)"
		"[root] module.vpc.output.private_route_table_ids (expand)" -> "[root] module.vpc.local.private_route_table_ids (expand)"
		"[root] module.vpc.output.private_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.output.private_subnets (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.output.private_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.output.private_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.output.public_internet_gateway_ipv6_route_id (expand)" -> "[root] module.vpc.aws_route.public_internet_gateway_ipv6 (expand)"
		"[root] module.vpc.output.public_internet_gateway_route_id (expand)" -> "[root] module.vpc.aws_route.public_internet_gateway (expand)"
		"[root] module.vpc.output.public_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.public (expand)"
		"[root] module.vpc.output.public_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.public (expand)"
		"[root] module.vpc.output.public_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.public (expand)"
		"[root] module.vpc.output.public_route_table_ids (expand)" -> "[root] module.vpc.local.public_route_table_ids (expand)"
		"[root] module.vpc.output.public_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.output.public_subnets (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.output.public_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.output.public_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.output.redshift_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.redshift (expand)"
		"[root] module.vpc.output.redshift_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.redshift (expand)"
		"[root] module.vpc.output.redshift_public_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.redshift_public (expand)"
		"[root] module.vpc.output.redshift_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.redshift (expand)"
		"[root] module.vpc.output.redshift_route_table_ids (expand)" -> "[root] module.vpc.local.private_route_table_ids (expand)"
		"[root] module.vpc.output.redshift_route_table_ids (expand)" -> "[root] module.vpc.local.public_route_table_ids (expand)"
		"[root] module.vpc.output.redshift_route_table_ids (expand)" -> "[root] module.vpc.local.redshift_route_table_ids (expand)"
		"[root] module.vpc.output.redshift_route_table_ids (expand)" -> "[root] module.vpc.var.enable_public_redshift (expand)"
		"[root] module.vpc.output.redshift_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.output.redshift_subnet_group (expand)" -> "[root] module.vpc.aws_redshift_subnet_group.redshift (expand)"
		"[root] module.vpc.output.redshift_subnets (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.output.redshift_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.output.redshift_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.output.this_customer_gateway (expand)" -> "[root] module.vpc.aws_customer_gateway.this (expand)"
		"[root] module.vpc.output.vgw_arn (expand)" -> "[root] module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.vpc.output.vgw_id (expand)" -> "[root] module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.vpc.output.vgw_id (expand)" -> "[root] module.vpc.aws_vpn_gateway_attachment.this (expand)"
		"[root] module.vpc.output.vpc_arn (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_cidr_block (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_enable_dns_hostnames (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_enable_dns_support (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_flow_log_cloudwatch_iam_role_arn (expand)" -> "[root] module.vpc.local.flow_log_iam_role_arn (expand)"
		"[root] module.vpc.output.vpc_flow_log_destination_arn (expand)" -> "[root] module.vpc.local.flow_log_destination_arn (expand)"
		"[root] module.vpc.output.vpc_flow_log_destination_type (expand)" -> "[root] module.vpc.var.flow_log_destination_type (expand)"
		"[root] module.vpc.output.vpc_flow_log_id (expand)" -> "[root] module.vpc.aws_flow_log.this (expand)"
		"[root] module.vpc.output.vpc_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_instance_tenancy (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_ipv6_association_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_ipv6_cidr_block (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_main_route_table_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_owner_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_secondary_cidr_blocks (expand)" -> "[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)"
		"[root] module.vpc.var.amazon_side_asn (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.azs (expand)" -> "[root] data.aws_availability_zones.available (expand)"
		"[root] module.vpc.var.azs (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.cidr (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_database_internet_gateway_route (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_database_nat_gateway_route (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_database_subnet_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_database_subnet_route_table (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_egress_only_igw (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_elasticache_subnet_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_elasticache_subnet_route_table (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_flow_log_cloudwatch_iam_role (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_flow_log_cloudwatch_log_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_igw (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_redshift_subnet_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_redshift_subnet_route_table (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_vpc (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.customer_gateway_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.customer_gateways (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.customer_owned_ipv4_pool (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_enable_dns64 (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_enable_resource_name_dns_a_record_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_group_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_group_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_ipv6_native (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_names (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_private_dns_hostname_type_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_network_acl_egress (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_network_acl_ingress (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_network_acl_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_network_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_route_table_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_route_table_propagating_vgws (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_route_table_routes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_security_group_egress (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_security_group_ingress (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_security_group_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_security_group_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_vpc_enable_dns_hostnames (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_vpc_enable_dns_support (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_vpc_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_vpc_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_domain_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_domain_name_servers (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_netbios_name_servers (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_netbios_node_type (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_ntp_servers (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_enable_dns64 (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_enable_resource_name_dns_a_record_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_group_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_group_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_ipv6_native (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_names (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_private_dns_hostname_type_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_dhcp_options (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_dns_hostnames (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_dns_support (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_flow_log (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_ipv6 (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_nat_gateway (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_network_address_usage_metrics (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_public_redshift (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_vpn_gateway (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.external_nat_ip_ids (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.external_nat_ips (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_cloudwatch_iam_role_arn (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_cloudwatch_log_group_kms_key_id (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_cloudwatch_log_group_name_prefix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_cloudwatch_log_group_name_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_cloudwatch_log_group_retention_in_days (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_destination_arn (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_destination_type (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_file_format (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_hive_compatible_partitions (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_log_format (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_max_aggregation_interval (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_per_hour_partition (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_traffic_type (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.igw_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.instance_tenancy (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_enable_dns64 (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_enable_resource_name_dns_a_record_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_ipv6_native (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_names (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_private_dns_hostname_type_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.ipv4_ipam_pool_id (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.ipv4_netmask_length (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.ipv6_cidr (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.ipv6_cidr_block_network_border_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.ipv6_ipam_pool_id (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.ipv6_netmask_length (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.manage_default_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.manage_default_route_table (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.manage_default_security_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.manage_default_vpc (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.map_customer_owned_ip_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.map_public_ip_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.nat_eip_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.nat_gateway_destination_cidr_block (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.nat_gateway_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.one_nat_gateway_per_az (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_arn (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_az (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_enable_dns64 (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_enable_resource_name_dns_a_record_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_ipv6_native (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_names (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_private_dns_hostname_type_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_enable_dns64 (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_enable_resource_name_dns_a_record_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_ipv6_native (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_names (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_private_dns_hostname_type_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_tags (expand)" -> "[root] local.cluster_name (expand)"
		"[root] module.vpc.var.private_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_tags_per_az (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.propagate_intra_route_tables_vgw (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.propagate_private_route_tables_vgw (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.propagate_public_route_tables_vgw (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_enable_dns64 (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_enable_resource_name_dns_a_record_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_ipv6_native (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_names (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_private_dns_hostname_type_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_tags (expand)" -> "[root] local.cluster_name (expand)"
		"[root] module.vpc.var.public_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_tags_per_az (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.putin_khuylo (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_enable_dns64 (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_enable_resource_name_dns_a_record_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_group_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_group_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_ipv6_native (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_names (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_private_dns_hostname_type_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.reuse_nat_ips (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.secondary_cidr_blocks (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.single_nat_gateway (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.use_ipam_pool (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpc_flow_log_permissions_boundary (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpc_flow_log_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpc_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpn_gateway_az (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpn_gateway_id (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpn_gateway_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] output.cluster_endpoint (expand)" -> "[root] module.eks.output.cluster_endpoint (expand)"
		"[root] output.cluster_name (expand)" -> "[root] module.eks.output.cluster_name (expand)"
		"[root] output.cluster_security_group_id (expand)" -> "[root] module.eks.output.cluster_security_group_id (expand)"
		"[root] output.region (expand)" -> "[root] var.region"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_eks_addon.ebs-csi (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.eks.aws_ec2_tag.cluster_primary_security_group (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.eks.aws_eks_addon.before_compute (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.eks.aws_eks_addon.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.eks.aws_eks_identity_provider_config.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.eks.aws_iam_openid_connect_provider.oidc_provider (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.eks.aws_iam_role_policy_attachment.additional (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.eks.aws_iam_role_policy_attachment.cluster_encryption (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.eks.module.kms.aws_kms_alias.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.eks.module.kms.aws_kms_grant.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.irsa-ebs-csi.aws_iam_role_policy_attachment.custom (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_customer_gateway.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_db_subnet_group.database (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_default_network_acl.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_default_route_table.default (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_default_security_group.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_flow_log.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.database_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.database_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.elasticache_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.elasticache_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.intra_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.intra_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.outpost_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.outpost_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.private_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.private_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.public_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.public_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.redshift_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.redshift_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_redshift_subnet_group.redshift (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.database_dns64_nat_gateway (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.database_internet_gateway (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.database_ipv6_egress (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.database_nat_gateway (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.private_dns64_nat_gateway (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.private_ipv6_egress (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.private_nat_gateway (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.public_internet_gateway (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.public_internet_gateway_ipv6 (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.database (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.elasticache (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.intra (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.outpost (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.private (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.public (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.redshift (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.redshift_public (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_vpc_dhcp_options_association.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" -> "[root] var.region"
		"[root] provider[\"registry.terraform.io/hashicorp/cloudinit\"] (close)" -> "[root] module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/cloudinit\"] (close)" -> "[root] module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)" -> "[root] module.eks.kubernetes_config_map_v1_data.aws_auth (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/random\"] (close)" -> "[root] random_string.suffix (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/time\"] (close)" -> "[root] module.eks.time_sleep.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/tls\"] (close)" -> "[root] module.eks.data.tls_certificate.this (expand)"
		"[root] random_string.suffix (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/random\"]"
		"[root] root" -> "[root] module.eks (close)"
		"[root] root" -> "[root] module.irsa-ebs-csi (close)"
		"[root] root" -> "[root] module.vpc (close)"
		"[root] root" -> "[root] output.cluster_endpoint (expand)"
		"[root] root" -> "[root] output.cluster_name (expand)"
		"[root] root" -> "[root] output.cluster_security_group_id (expand)"
		"[root] root" -> "[root] output.region (expand)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/cloudinit\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/random\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/time\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/tls\"] (close)"
	}
}

